{"version":3,"sources":["Images/fair_ICON.svg","Images/team_ICON.svg","Images/check_ICON.svg","Images/house_ICON.svg","Images/jewelry_ICON.svg","Images/divorce-assets-finance_ICON.svg","Images/Information-Entry-step1_ICON.svg","Images/Questions-step2_ICON.svg","Images/Values-step3_ICON.svg","Images/Allocation-step4_ICON.svg","Images/group-selfie-happy-fair.svg","Images/meeting-local-group_ICON.svg","Images/share-online-group_ICON.svg","Components/MainPage/MainPage.js","Components/MainPage/About.js","Components/LearningPage/LearnMainPage.js","Components/Navigation/SignedInLinks.js","Components/Navigation/SignedOutLinks.js","Components/Navigation/NavCom.js","Components/Navigation/Footer.js","Components/Account/CreateAccount.js","Components/Account/Login.js","Components/Account/AccountActions/ChangeEmailForm.js","Components/Account/AccountActions/ChangeUsernameForm.js","Components/Account/AccountActions/ChangePasswordForm.js","Components/Account/AccountBoardPastSessionDisplay.js","Components/LoadingScreen/LoadingScreen.js","Components/Account/AccountBoard.js","Components/Helpers/ScrollToTop.js","Components/Notifications/InviteToSessionNotificationModal.js","Components/Notifications/SessionNotificationOverlay.js","ReduxStore/Actions/questionnaireActions.js","ReduxStore/Actions/resetDistributeAction.js","Components/Distribute/QuestionnaireSubcomponents/LocalOrRemoteQuestion.js","Components/Notifications/ErrorAlertModal.js","Components/Distribute/Local/Goods/InputGoodsInfo.js","Components/Distribute/Local/Goods/Goods_GatherInfoPage.js","Components/Distribute/Local/Rent/InputRoomsInfo.js","Components/Distribute/Local/Rent/Rent_GatherInfoPage.js","Components/Distribute/Local/Divorce/Divorce_GatherGoodsInfoPage.js","Components/Distribute/Local/Divorce/InputMoneyInfo.js","Components/Distribute/Local/Divorce/Divorce_GatherMoneyInfoPage.js","Components/Distribute/Local/Group/LocalInputGroupInfoPage.js","Components/Distribute/Local/Goods/GoodsQuestionnairePage.js","Components/Distribute/Local/Rent/RentQuestionnairePage.js","Components/Distribute/Local/InputValuesComponents/InputValuations.js","Components/Distribute/Local/SetValuations/SetValuationsPage.js","ApiFunctions/getRentResults.js","ApiFunctions/getGoodsResults.js","ApiFunctions/getDivorceResults.js","Components/Distribute/Local/Results/LocalResultsPage.js","Components/Distribute/Remote/GatherInfo/Goods/InputForms/RemoteInputGoodsInfo.js","Components/Distribute/Remote/GatherInfo/Goods/RemoteGatherGoodsPage.js","Components/Distribute/Remote/GatherInfo/Goods/RemoteDivorce_GatherMoneyInfoPage.js","Components/Distribute/Remote/GatherInfo/Group/RemoteInputGroupInfoPage.js","Components/Distribute/Remote/SetValuations/RemoteInputValuations.js","Components/Distribute/Remote/SetValuations/Remote_SetValuationsPage.js","Components/Distribute/Remote/Results/RemoteResultsPage.js","App.js","serviceWorker.js","ReduxStore/Reducers/distGoodsInfoReducer.js","ReduxStore/Reducers/GroupValuesReducer.js","ReduxStore/Reducers/distQuestionsReducer.js","ReduxStore/Reducers/rootReducer.js","FirebaseConfig/fbConfig.js","index.js"],"names":["module","exports","MainPage","goodsDesc","useRef","Container","fluid","className","Row","style","minHeight","textAlign","Col","xs","md","lg","Button","variant","size","onClick","current","scrollIntoView","behavior","textDecoration","to","src","titleImage","alt","maxWidth","backgroundColor","minWidth","sm","logo1","width","height","logo2","logo3","ref","display","logo4","logo5","logo6","logoStep1","logoStep2","logoStep3","logoStep4","href","About","marginTop","LearnMainPage","xl","Navbar","expand","Nav","Link","active","padding","id","withRouter","connect","dispatch","logoutSuccess","type","props","firebase","useFirebase","userLetter","profile","username","flex","color","Item","setTimeout","setExpanded","logout","then","history","push","cursor","SignedOutLinks","state","authStatus","auth","useState","expanded","Brand","Toggle","aria-controls","Collapse","exact","fontWeight","isLoaded","uid","Footer","zIndex","marginBottom","fontSize","title","CreateAccount","email","setEmail","setUsername","pass","setPass","error","setError","firestore","useFirestore","authLoaded","useSelector","authId","errorMessage","console","log","message","Form","onSubmit","e","preventDefault","createUser","password","a","user","currentUser","updateProfile","displayName","sendEmailVerification","set","collection","doc","invites","catch","err","Error","Group","controlId","Label","Control","value","onChange","target","Alert","position","top","left","Login","login","ChangeEmailForm","updateEmail","setEmailChange","setErrorMessage","ChangeUsernameForm","setUsernameChange","ChangePasswordForm","setPassword","updatePassword","setPassChange","AccountBoardPastSessionDisplay","session","Card","Body","group","map","goods","length","totalCost","good","Good","moneyAmount","allocations","room","price","money","LoadingScreen","Spinner","animation","role","AccountBoard","emailChange","usernameChange","passChange","pastSessions","setPastSessions","useEffect","userInfo","userEmail","get","where","docSnap","tempArr","docs","forEach","result","data","vEmailSent","setVEmailSent","delAccountSelected","setDelAccountSelected","isEmpty","border","disabled","emailVerified","fontStyle","Date","createdAt","toLocaleDateString","lastLoginAt","delete","deleteAccount","key","unlisten","listen","window","scrollTo","InviteToSessionNotificationModal","sessionID","info","joinSession","declineSession","Toast","Header","ownerUsername","useFirestoreConnect","sessionInvites","SessionInvitations","newInvites","JSON","parse","stringify","update","location","Object","entries","invite","method","goodType","useParams","useDispatch","resetDistributeAction","setMethod","questionnaireActions","add","owner","docSnapshot","shareLocal","shareOnlineGroup","ErrorAlertModal","stateGoodsArray","distGoodsInfo","goodsArray","addGoods","deleteGood","goodName","updateTotalValue","tValue","i","setGoodName","goodValue","setGoodValue","borderTop","borderBottom","filter","String","estValue","Value","placeholder","marginLeft","marginRight","body","next","shareMethod","questionnaireAnswers","stateRoomCount","stateHouseValue","totalValue","addGoodsAmount","item","roomCount","houseValue","setHouseValue","setRoomCount","stateMoneyAmount","updateMoneyAmount","setMoneyAmount","stateUserArray","distGroupInfo","userArray","stateGoodsArr","addUser","goodsArr","removeUser","some","obj","stage","InputValuationsForGood","handleChange","curGood","setTotal","usersGoodsArr","reduce","sum","parseInt","margin","min","max","step","onInput","usersArr","updateGoodsValuations","arr","updatedArr","total","nextUser","currUser","userGoodsArr","getAllocation","setCurrUser","InputValuations","getRentResults","valueMatrix","requestOptions","headers","Origin","fetch","json","getGoodsResults","getDivorceResults","stateAllocation","setStateAllocation","allocationArr","userCount","goodsCount","Array","from","j","allocationsArr","allocation","who","alloGoods","goodsList","allocationObject","goodIndex","RemoteInputGoodsInfo","goodsTotalVal","t","newGoodsTotalVal","newGoodsArr","RemoteGatherGoodsPage","match","params","ShareSessions","RemoteDivorce_GatherMoneyInfoPage","setUserEmail","thisUserInvited","setThisUserInvited","userAllowedDetermined","setUserAllowedDetermined","inviteSent","setInviteSent","firebaseUsers","ordered","users","invitations","isSessionLoaded","isUsersLoaded","invitedUsers","inviteToGroup","inviteInfo","userCurInvitations","find","element","newGroup","newInvitedUsers","deleteUser","changeGoodValue","RemoteInputValuations","setUserGoodsArr","newValue","newUserGoodsArr","object","storeValuations","userInSession","setUserInSession","userInSessionDetermined","setUserInSessionDetermined","editValues","setEditValues","values","keys","userGoodsArray","userValues","RemoteResultsPage","fsValuesArray","index","App","useLocation","pathname","path","component","LocalOrRemoteQuestion","RemoteInputGroupInfoPage","Remote_SetValuationsPage","GoodsQuestionnairePageShell","RentQuestionnairePageShell","Goods_GatherInfoPage","Rent_GatherInfoPage","Divorce_GatherGoodsInfoPage","Divorce_GatherMoneyInfoPage","LocalInputGroupInfoPage","SetValuationsPage","LocalResultsPage","render","Boolean","hostname","initState","distGoodsInfoReducer","action","tempRoomsArr","r","tempGoodsArr","g","newTotal","newMoneyAmount","tempUpdatedArr","GroupValuesReducer","tempUserArr","tempInitUserArr","newUserArr","newAllocationsArr","question","answer","distQuestionsReducer","newShareMethod","ans","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","reduxStore","compose","reduxFirestore","createStore","createStoreWithFirebase","rrfProps","config","fbConfig","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","store","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55feeb14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fair_ICON.8cb41749.svg\";","module.exports = __webpack_public_path__ + \"static/media/team_ICON.d2605492.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_ICON.b676f270.svg\";","module.exports = __webpack_public_path__ + \"static/media/house_ICON.8fe90797.svg\";","module.exports = __webpack_public_path__ + \"static/media/jewelry_ICON.588d5bf1.svg\";","module.exports = __webpack_public_path__ + \"static/media/divorce-assets-finance_ICON.89dd06df.svg\";","module.exports = __webpack_public_path__ + \"static/media/Information-Entry-step1_ICON.3f6b7ac2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Questions-step2_ICON.cec6bab5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Values-step3_ICON.2de17e1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Allocation-step4_ICON.783ffc33.svg\";","module.exports = __webpack_public_path__ + \"static/media/group-selfie-happy-fair.a1105888.svg\";","module.exports = __webpack_public_path__ + \"static/media/meeting-local-group_ICON.7ea09a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/share-online-group_ICON.c9149cb8.svg\";","import React, { useRef } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Icons\r\nimport logo1 from \"../../Images/fair_ICON.svg\";\r\nimport logo2 from \"../../Images/team_ICON.svg\";\r\nimport logo3 from \"../../Images/check_ICON.svg\";\r\nimport logo4 from \"../../Images/house_ICON.svg\";\r\nimport logo5 from \"../../Images/jewelry_ICON.svg\";\r\nimport logo6 from \"../../Images/divorce-assets-finance_ICON.svg\";\r\nimport logoStep1 from \"../../Images/Information-Entry-step1_ICON.svg\";\r\nimport logoStep2 from \"../../Images/Questions-step2_ICON.svg\";\r\nimport logoStep3 from \"../../Images/Values-step3_ICON.svg\";\r\nimport logoStep4 from \"../../Images/Allocation-step4_ICON.svg\";\r\n\r\nimport titleImage from \"../../Images/group-selfie-happy-fair.svg\";\r\n\r\n// React Router\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//TODO: [A301212-85] Dependencies outdated. Update to React 17.\r\n//// [A301212-87] Ability to reset password in login screen.\r\n////\r\n//? Create a value matrix in input valuations component instead of results page.\r\n//? Wait for auth to load before rendering anything in App.js.\r\n//? More username error types e.g., must be over 6 characters.\r\n//? Maybe Re-authenticate a user rather than ask to login.\r\n////\r\n\r\nconst MainPage = () => {\r\n    // Scrolling.\r\n    const goodsDesc = useRef(null);\r\n    const executeScroll = () =>\r\n        goodsDesc.current.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n    return (\r\n        <Container fluid className='min-vh-100'>\r\n            <Row\r\n                className='justify-content-center align-items-center divBlockWithContentTitle p-3 backTitleImage'\r\n                style={{ minHeight: \"40vh\", textAlign: \"left\" }}\r\n            >\r\n                <Col xs='12' md='6' lg='5'>\r\n                    <h1 className='Title w-100'>Fair / Share</h1>\r\n                    <h5 className='descText mt-2'>\r\n                        Our service helps you solve day-to-day sharing problems\r\n                        using mathematical algorithms that are tailored to you.\r\n                        <br />\r\n                        Sharing a house with friends? Need to divide financial\r\n                        assets fairly?\r\n                        <br />\r\n                        We can help.\r\n                    </h5>\r\n                    <div className='w-100 mt-5'>\r\n                        <Button\r\n                            variant='secondary'\r\n                            size='sm'\r\n                            onClick={executeScroll}\r\n                        >\r\n                            <span className='smButtonText'>Begin</span>\r\n                        </Button>\r\n                        <Link\r\n                            className='m-2'\r\n                            style={{ textDecoration: \"none\" }}\r\n                            to='/Learn'\r\n                        >\r\n                            <Button variant='secondary' size='sm'>\r\n                                <span className='smButtonText'>Learn</span>\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </Col>\r\n                <Col xs='12' md='6' lg='5'>\r\n                    <img\r\n                        src={titleImage}\r\n                        alt='group-selfie-happy-fair'\r\n                        style={{ maxWidth: \"100%\" }}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row\r\n                className='justify-content-center align-items-center p-4'\r\n                style={{ minHeight: \"55vh\", backgroundColor: \"#fff\" }}\r\n            >\r\n                <Row style={{ maxWidth: \"950px\", minWidth: \"300px\" }}>\r\n                    <Col xs='12' sm='6' md='4' className='my-2'>\r\n                        <div>\r\n                            <img\r\n                                src={logo1}\r\n                                alt='icon-fair-division'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h1 className='iconDesc'>Fair</h1>\r\n                            <p className='iconDescSmall'>\r\n                                Our algorithms results in mathematically proven\r\n                                fair allocations.\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs='12' sm='6' md='4' className='my-2'>\r\n                        <div>\r\n                            <img\r\n                                src={logo2}\r\n                                alt='icon-team-diverse'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h1 className='iconDesc'>Personalised</h1>\r\n                            <p className='iconDescSmall'>\r\n                                You decide which of our many algorithms to use,\r\n                                based on your preferences.\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs='12' sm='6' md='4' className='my-2'>\r\n                        <div className='h-100'>\r\n                            <img\r\n                                src={logo3}\r\n                                alt='icon-check-star'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h1 className='iconDesc'>Easy</h1>\r\n                            <p className='iconDescSmall'>\r\n                                Our service is as quick and straightforward to\r\n                                use as possible.\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n\r\n            <Row\r\n                className='justify-content-center divBlockWithContentPrimary align-items-center p-5'\r\n                style={{ minHeight: \"60vh\" }}\r\n                ref={goodsDesc}\r\n            >\r\n                <div className='' style={{ maxWidth: \"1250px\" }}>\r\n                    <h3 className=''>We can help you</h3>\r\n                    <Row className='mt-5 justify-content-center align-items-center'>\r\n                        <Col\r\n                            style={{ display: \"inline\" }}\r\n                            xs='12'\r\n                            sm='12'\r\n                            md='6'\r\n                            lg='4'\r\n                            className='my-3'\r\n                        >\r\n                            <img\r\n                                src={logo4}\r\n                                alt='icon-house-rent'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h1 className='iconDesc2'>Share Rent</h1>\r\n                            <p className='mt-2 goodDescParagraph'>\r\n                                Renting an apartment with your friends can be\r\n                                tricky. How do you decide who gets what room\r\n                                without anyone feeling upset. Our algorithms use\r\n                                your values for each room to give you a\r\n                                mathematically fair allocation.\r\n                            </p>\r\n                            <Link\r\n                                className='m-2'\r\n                                style={{ textDecoration: \"none\" }}\r\n                                to='/Distribute/localremote/Rent'\r\n                            >\r\n                                <Button variant='secondary' size='sm'>\r\n                                    <span className='smButtonText'>Start</span>\r\n                                </Button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col\r\n                            style={{ display: \"inline\" }}\r\n                            xs='12'\r\n                            sm='12'\r\n                            md='6'\r\n                            lg='4'\r\n                            className='my-3'\r\n                        >\r\n                            <img\r\n                                src={logo5}\r\n                                alt='icon-jewelry-goods'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h1 className='iconDesc2'>Share Goods</h1>\r\n                            <p className='mt-2 goodDescParagraph'>\r\n                                Share any type of good such as jewelry,\r\n                                financial assets, or real estate. Simply enter\r\n                                the details of each good. By assigning a\r\n                                monetary valuation for each good, we give you a\r\n                                envy-free allocation that maximizes the sum of\r\n                                bids.\r\n                            </p>\r\n                            <Link\r\n                                className='m-2'\r\n                                style={{ textDecoration: \"none\" }}\r\n                                to='/Distribute/localremote/Goods'\r\n                            >\r\n                                <Button variant='secondary' size='sm'>\r\n                                    <span className='smButtonText'>Start</span>\r\n                                </Button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col\r\n                            style={{ display: \"inline\" }}\r\n                            xs='12'\r\n                            sm='12'\r\n                            md='6'\r\n                            lg='4'\r\n                            className='my-3'\r\n                        >\r\n                            <img\r\n                                src={logo6}\r\n                                alt='divorce-assets-finance-fair'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h1 className='iconDesc2'>Separate Finances</h1>\r\n                            <p className='mt-2 goodDescParagraph'>\r\n                                When you divorce or end a civil partnership,\r\n                                separating your money and property is very\r\n                                tricky. Our service can help start things off by\r\n                                giving you a fair distribution of assets based\r\n                                on which goods you value. And this isn't limited\r\n                                to finances.\r\n                            </p>\r\n                            <Link\r\n                                className='m-2'\r\n                                style={{ textDecoration: \"none\" }}\r\n                                to='/Distribute/localremote/Divorce'\r\n                            >\r\n                                <Button variant='secondary' size='sm'>\r\n                                    <span className='smButtonText'>Start</span>\r\n                                </Button>\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Row>\r\n\r\n            <Row\r\n                className='justify-content-center divBlockWithContentSecondary align-items-center p-4'\r\n                style={{ minHeight: \"60vh\" }}\r\n            >\r\n                <Container style={{ maxWidth: \"1200px\" }}>\r\n                    <Col xs='12'>\r\n                        <h5>How does it work?</h5>\r\n                        <h1 className='greenText'>Simple</h1>\r\n                    </Col>\r\n                    <hr />\r\n                    <Row>\r\n                        <Col sm='6' md='3' className='my-2'>\r\n                            <img\r\n                                src={logoStep1}\r\n                                alt='icon-information-entry-step1'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h5 className='descText'>\r\n                                1. Enter info about your items.\r\n                            </h5>\r\n                        </Col>\r\n                        <Col sm='6' md='3' className='my-2'>\r\n                            <img\r\n                                src={logoStep2}\r\n                                alt='icon-questions-step2'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h5 className='descText'>\r\n                                2. Invite others to your group.\r\n                            </h5>\r\n                        </Col>\r\n                        <Col sm='6' md='3' className='my-2'>\r\n                            <img\r\n                                src={logoStep3}\r\n                                alt='icon-values-step3'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h5 className='descText'>\r\n                                3. Assess the value of each item.\r\n                            </h5>\r\n                        </Col>\r\n                        <Col sm='6' md='3' className='my-2'>\r\n                            <img\r\n                                src={logoStep4}\r\n                                alt='icon-allocation-step4'\r\n                                style={{ width: \"125px\", height: \"125px\" }}\r\n                            />\r\n                            <h5 className='descText'>4. See who gets what.</h5>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Row>\r\n            <Row\r\n                className='justify-content-center divBlockWithContentGreen align-items-center p-4'\r\n                style={{ minHeight: \"20vh\" }}\r\n            >\r\n                <Col>\r\n                    <h5>Want to learn more about the underlying algorithms?</h5>\r\n                    <a href='/Learn' style={{ textDecoration: \"none\" }}>\r\n                        <h4 className='bigTextLink'>\r\n                            Go to our learning page.\r\n                        </h4>\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <Container\r\n            fluid\r\n            className='h-100 divBlockWithContentPrimary'\r\n            style={{ height: \"100vh\" }}\r\n        >\r\n            <Row>\r\n                <Col xs={12} lg={12} style={{ marginTop: \"25px\" }}>\r\n                    <h2>\r\n                        This website was created as part of my final year\r\n                        project.\r\n                    </h2>\r\n                </Col>\r\n                <Col xs={12} lg={12} style={{ marginTop: \"25px\" }}>\r\n                    <h2>Created by: Emmanuils Borovikovs</h2>\r\n                    <h2>Email: eb18847@essex.ac.uk</h2>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nconst LearnMainPage = () => {\r\n    return (\r\n        <Container\r\n            fluid\r\n            className='divBlockWithContentTertiary min-vh-100 blackText'\r\n        >\r\n            <Row className='min-vh-100' style={{ textAlign: \"left\" }}>\r\n                {/* Left */}\r\n                <Col sm={4} md={3} lg={2} xl={2} className='sidebar p-4'>\r\n                    <h3>Learn</h3>\r\n                    <hr />\r\n                    <Navbar expand='sm' variant='light'>\r\n                        <Nav className='flex-column'>\r\n                            <Nav.Link\r\n                                href='#section1'\r\n                                active={false}\r\n                                style={{ padding: \"4px\" }}\r\n                            >\r\n                                Section 1\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                href='#section2'\r\n                                active={false}\r\n                                style={{ padding: \"4px\" }}\r\n                            >\r\n                                Section 2\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                href='#section3'\r\n                                active={false}\r\n                                style={{ padding: \"4px\" }}\r\n                            >\r\n                                Section 3\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                href='#section4'\r\n                                active={false}\r\n                                style={{ padding: \"4px\" }}\r\n                            >\r\n                                Section 4\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                href='#section4'\r\n                                active={false}\r\n                                style={{ padding: \"4px\" }}\r\n                            >\r\n                                Section 5\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </Col>\r\n                {/* Right */}\r\n                <Col sm={8} md={9} lg={7} xl={8} className='p-5'>\r\n                    <h3 id='section1'>Section 1</h3>\r\n                    <hr />\r\n                    <p>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                        Vivamus interdum nisi sapien. Nulla lobortis gravida\r\n                        auctor. Aliquam ac ipsum viverra arcu ullamcorper\r\n                        malesuada. Pellentesque varius egestas nibh, a eleifend\r\n                        nisi cursus sit amet. Proin dictum posuere erat non\r\n                        facilisis. Vivamus id interdum sapien. Proin imperdiet\r\n                        risus id odio condimentum aliquam. Curabitur sagittis\r\n                        tempor scelerisque. Vestibulum non neque dictum, porta\r\n                        mi ut, dignissim elit. Nam sit amet lacinia sapien.\r\n                        Maecenas mollis nisl nec mollis aliquam. Pellentesque\r\n                        dictum laoreet metus, a condimentum elit rhoncus tempor.\r\n                        Curabitur vehicula sit amet sem at pulvinar. Nunc\r\n                        bibendum odio sapien, sed ullamcorper leo commodo vitae.\r\n                        Fusce sit amet ullamcorper leo. Vivamus venenatis augue\r\n                        ut lectus euismod, sed hendrerit nulla imperdiet. <br />\r\n                        Praesent luctus nunc ut eleifend tempor. Etiam a\r\n                        venenatis diam. Morbi in lobortis arcu, ut fermentum\r\n                        sem. Suspendisse nibh lacus, mattis nec ex sodales,\r\n                        elementum pharetra nisl. Donec condimentum laoreet nisi\r\n                        sed luctus. Morbi malesuada eu magna vel vulputate. Cras\r\n                        quis purus urna. Donec odio nulla, vehicula sed laoreet\r\n                        ut, malesuada semper nibh. Mauris in maximus odio, ac\r\n                        fermentum dolor. Aliquam sed libero et mauris euismod\r\n                        mollis commodo vitae felis. Aenean eget justo cursus,\r\n                        consectetur magna in, aliquam lectus. Maecenas nisi\r\n                        quam, tincidunt quis tristique a, vestibulum at purus.\r\n                        Integer urna ligula, scelerisque sit amet velit ut,\r\n                        porta tincidunt elit. Suspendisse ac nibh et diam auctor\r\n                        gravida. Etiam faucibus feugiat eros, sed faucibus arcu\r\n                        accumsan quis. Pellentesque at urna tempor, aliquet\r\n                        risus ac, tincidunt libero. Aenean hendrerit ipsum\r\n                        tempus, semper nulla id, volutpat dui. Fusce euismod\r\n                        vitae augue non vehicula. Donec commodo porta rutrum.\r\n                        Mauris imperdiet gravida ligula sit amet semper. Donec\r\n                        dolor est, feugiat at tortor viverra, imperdiet finibus\r\n                        metus. Praesent tincidunt laoreet enim vitae vestibulum.\r\n                        Maecenas purus ipsum, dictum quis ex ac, suscipit\r\n                        efficitur neque. Fusce malesuada augue urna, nec dictum\r\n                        massa porta maximus. Suspendisse potenti. <br />\r\n                        Curabitur placerat in ex sed convallis. Nam rhoncus\r\n                        lorem nec neque sollicitudin posuere. Duis sem nibh,\r\n                        dignissim suscipit ante vitae, consectetur luctus ex.\r\n                        Sed at nunc quis lacus consectetur eleifend. Sed vitae\r\n                        luctus mauris. Curabitur semper id eros quis vulputate.\r\n                    </p>\r\n                    <p>\r\n                        Maecenas enim mauris, vehicula et erat hendrerit,\r\n                        vulputate suscipit ipsum. Maecenas quis arcu eget tellus\r\n                        imperdiet vulputate vel et quam. Suspendisse a dolor\r\n                        erat. Vivamus dapibus tempus risus, ut egestas arcu\r\n                        dignissim eu. Suspendisse rutrum lacus ipsum, sed\r\n                        placerat turpis aliquam vitae. Aliquam pulvinar, quam in\r\n                        ornare vulputate, nisl sapien molestie neque, sed\r\n                        bibendum mi nibh a sapien. Pellentesque sagittis feugiat\r\n                        aliquet. Aliquam erat volutpat. Nulla luctus porta\r\n                        velit, in fermentum tellus accumsan non. In nec\r\n                        condimentum urna. Cras porta nisl id velit volutpat\r\n                        sollicitudin. Nullam gravida leo at lorem hendrerit, vel\r\n                        ultricies erat tempor. Duis sit amet sapien lectus.\r\n                        Integer eleifend pretium laoreet. Nullam lacus sapien,\r\n                        luctus ut varius eu, ultricies nec erat. Suspendisse\r\n                        efficitur elementum ligula ut tincidunt. Morbi fringilla\r\n                        leo non maximus luctus. Aenean nec sapien magna. Sed\r\n                        lobortis tincidunt leo, consequat aliquam lorem varius\r\n                        id. Quisque tellus elit, condimentum in mauris et,\r\n                        fermentum ullamcorper nibh. Nulla at tortor sem. Nam eu\r\n                        auctor enim. Sed ante orci, tincidunt a tristique vel,\r\n                        lacinia non enim.\r\n                    </p>\r\n                    <h3 id='section2' className='mt-5'>\r\n                        Section 2\r\n                    </h3>\r\n                    <hr />\r\n                    <p>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                        Vivamus interdum nisi sapien. Nulla lobortis gravida\r\n                        auctor. Aliquam ac ipsum viverra arcu ullamcorper\r\n                        malesuada. Pellentesque varius egestas nibh, a eleifend\r\n                        nisi cursus sit amet. Proin dictum posuere erat non\r\n                        facilisis. Vivamus id interdum sapien. Proin imperdiet\r\n                        risus id odio condimentum aliquam. Curabitur sagittis\r\n                        tempor scelerisque. Vestibulum non neque dictum, porta\r\n                        mi ut, dignissim elit. Nam sit amet lacinia sapien.\r\n                        Maecenas mollis nisl nec mollis aliquam. Pellentesque\r\n                        dictum laoreet metus, a condimentum elit rhoncus tempor.\r\n                        Curabitur vehicula sit amet sem at pulvinar. Nunc\r\n                        bibendum odio sapien, sed ullamcorper leo commodo vitae.\r\n                        Fusce sit amet ullamcorper leo. Vivamus venenatis augue\r\n                        ut lectus euismod, sed hendrerit nulla imperdiet. <br />\r\n                        tempus, semper nulla id, volutpat dui. Fusce euismod\r\n                        vitae augue non vehicula. Donec commodo porta rutrum.\r\n                        Mauris imperdiet gravida ligula sit amet semper. Donec\r\n                        dolor est, feugiat at tortor viverra, imperdiet finibus\r\n                        metus. Praesent tincidunt laoreet enim vitae vestibulum.\r\n                        Maecenas purus ipsum, dictum quis ex ac, suscipit\r\n                        efficitur neque. Fusce malesuada augue urna, nec dictum\r\n                        massa porta maximus. Suspendisse potenti. <br />\r\n                        Curabitur placerat in ex sed convallis. Nam rhoncus\r\n                        lorem nec neque sollicitudin posuere. Duis sem nibh,\r\n                        dignissim suscipit ante vitae, consectetur luctus ex.\r\n                        Sed at nunc quis lacus consectetur eleifend. Sed vitae\r\n                        luctus mauris. Curabitur semper id eros quis vulputate.\r\n                    </p>\r\n                    <h3 id='section3' className='mt-5'>\r\n                        Section 3\r\n                    </h3>\r\n                    <hr />\r\n                    <p>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                        Vivamus interdum nisi sapien. Nulla lobortis gravida\r\n                        auctor. Aliquam ac ipsum viverra arcu ullamcorper\r\n                        malesuada. Pellentesque varius egestas nibh, a eleifend\r\n                        nisi cursus sit amet. Proin dictum posuere erat non\r\n                        facilisis. Vivamus id interdum sapien. Proin imperdiet\r\n                        risus id odio condimentum aliquam. Curabitur sagittis\r\n                        tempor scelerisque. Vestibulum non neque dictum, porta\r\n                        mi ut, dignissim elit. Nam sit amet lacinia sapien.\r\n                        Maecenas mollis nisl nec mollis aliquam. Pellentesque\r\n                        dictum laoreet metus, a condimentum elit rhoncus tempor.\r\n                        Curabitur vehicula sit amet sem at pulvinar. Nunc\r\n                        bibendum odio sapien, sed ullamcorper leo commodo vitae.\r\n                        Fusce sit amet ullamcorper leo. Vivamus venenatis augue\r\n                        ut lectus euismod, sed hendrerit nulla imperdiet. <br />\r\n                        tempus, semper nulla id, volutpat dui. Fusce euismod\r\n                        vitae augue non vehicula. Donec commodo porta rutrum.\r\n                        Mauris imperdiet gravida ligula sit amet semper. Donec\r\n                        dolor est, feugiat at tortor viverra, imperdiet finibus\r\n                        metus. Praesent tincidunt laoreet enim vitae vestibulum.\r\n                        Maecenas purus ipsum, dictum quis ex ac, suscipit\r\n                        efficitur neque. Fusce malesuada augue urna, nec dictum\r\n                        massa porta maximus. Suspendisse potenti. <br />\r\n                        Curabitur placerat in ex sed convallis. Nam rhoncus\r\n                        lorem nec neque sollicitudin posuere. Duis sem nibh,\r\n                        dignissim suscipit ante vitae, consectetur luctus ex.\r\n                        Sed at nunc quis lacus consectetur eleifend. Sed vitae\r\n                        luctus mauris. Curabitur semper id eros quis vulputate.\r\n                    </p>\r\n                    <p>\r\n                        Maecenas enim mauris, vehicula et erat hendrerit,\r\n                        vulputate suscipit ipsum. Maecenas quis arcu eget tellus\r\n                        imperdiet vulputate vel et quam. Suspendisse a dolor\r\n                        erat. Vivamus dapibus tempus risus, ut egestas arcu\r\n                        sollicitudin. Nullam gravida leo at lorem hendrerit, vel\r\n                        ultricies erat tempor. Duis sit amet sapien lectus.\r\n                        Integer eleifend pretium laoreet. Nullam lacus sapien,\r\n                        luctus ut varius eu, ultricies nec erat. Suspendisse\r\n                        efficitur elementum ligula ut tincidunt. Morbi fringilla\r\n                        leo non maximus luctus. Aenean nec sapien magna. Sed\r\n                        lobortis tincidunt leo, consequat aliquam lorem varius\r\n                        id. Quisque tellus elit, condimentum in mauris et,\r\n                        fermentum ullamcorper nibh. Nulla at tortor sem. Nam eu\r\n                        auctor enim. Sed ante orci, tincidunt a tristique vel,\r\n                        lacinia non enim.\r\n                    </p>\r\n                    <h3 id='section4' className='mt-5'>\r\n                        Section 4\r\n                    </h3>\r\n                    <hr />\r\n                    <p>\r\n                        Maecenas enim mauris, vehicula et erat hendrerit,\r\n                        vulputate suscipit ipsum. Maecenas quis arcu eget tellus\r\n                        imperdiet vulputate vel et quam. Suspendisse a dolor\r\n                        erat. Vivamus dapibus tempus risus, ut egestas arcu\r\n                        sollicitudin. Nullam gravida leo at lorem hendrerit, vel\r\n                        ultricies erat tempor. Duis sit amet sapien lectus.\r\n                        Integer eleifend pretium laoreet. Nullam lacus sapien,\r\n                        luctus ut varius eu, ultricies nec erat. Suspendisse\r\n                        efficitur elementum ligula ut tincidunt. Morbi fringilla\r\n                        leo non maximus luctus. Aenean nec sapien magna. Sed\r\n                        lobortis tincidunt leo, consequat aliquam lorem varius\r\n                        id. Quisque tellus elit, condimentum in mauris et,\r\n                        fermentum ullamcorper nibh. Nulla at tortor sem. Nam eu\r\n                        auctor enim. Sed ante orci, tincidunt a tristique vel,\r\n                        lacinia non enim.\r\n                    </p>\r\n                    <h3 id='section5'>Section 5</h3>\r\n                    <hr />\r\n                    <p>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                        Vivamus interdum nisi sapien. Nulla lobortis gravida\r\n                        auctor. Aliquam ac ipsum viverra arcu ullamcorper\r\n                        malesuada. Pellentesque varius egestas nibh, a eleifend\r\n                        nisi cursus sit amet. Proin dictum posuere erat non\r\n                        facilisis. Vivamus id interdum sapien. Proin imperdiet\r\n                        risus id odio condimentum aliquam. Curabitur sagittis\r\n                        tempor scelerisque. Vestibulum non neque dictum, porta\r\n                        mi ut, dignissim elit. Nam sit amet lacinia sapien.\r\n                        Maecenas mollis nisl nec mollis aliquam. Pellentesque\r\n                        dictum laoreet metus, a condimentum elit rhoncus tempor.\r\n                        Curabitur vehicula sit amet sem at pulvinar. Nunc\r\n                        bibendum odio sapien, sed ullamcorper leo commodo vitae.\r\n                        Fusce sit amet ullamcorper leo. Vivamus venenatis augue\r\n                        ut lectus euismod, sed hendrerit nulla imperdiet. <br />\r\n                        Praesent luctus nunc ut eleifend tempor. Etiam a\r\n                        venenatis diam. Morbi in lobortis arcu, ut fermentum\r\n                        sem. Suspendisse nibh lacus, mattis nec ex sodales,\r\n                        elementum pharetra nisl. Donec condimentum laoreet nisi\r\n                        sed luctus. Morbi malesuada eu magna vel vulputate. Cras\r\n                        quis purus urna. Donec odio nulla, vehicula sed laoreet\r\n                        ut, malesuada semper nibh. Mauris in maximus odio, ac\r\n                        fermentum dolor. Aliquam sed libero et mauris euismod\r\n                        mollis commodo vitae felis. Aenean eget justo cursus,\r\n                        consectetur magna in, aliquam lectus. Maecenas nisi\r\n                        quam, tincidunt quis tristique a, vestibulum at purus.\r\n                        Integer urna ligula, scelerisque sit amet velit ut,\r\n                        porta tincidunt elit. Suspendisse ac nibh et diam auctor\r\n                        gravida. Etiam faucibus feugiat eros, sed faucibus arcu\r\n                        accumsan quis. Pellentesque at urna tempor, aliquet\r\n                        risus ac, tincidunt libero. Aenean hendrerit ipsum\r\n                        tempus, semper nulla id, volutpat dui. Fusce euismod\r\n                        vitae augue non vehicula. Donec commodo porta rutrum.\r\n                        Mauris imperdiet gravida ligula sit amet semper. Donec\r\n                        dolor est, feugiat at tortor viverra, imperdiet finibus\r\n                        metus. Praesent tincidunt laoreet enim vitae vestibulum.\r\n                        Maecenas purus ipsum, dictum quis ex ac, suscipit\r\n                        efficitur neque. Fusce malesuada augue urna, nec dictum\r\n                        massa porta maximus. Suspendisse potenti. <br />\r\n                        Curabitur placerat in ex sed convallis. Nam rhoncus\r\n                        lorem nec neque sollicitudin posuere. Duis sem nibh,\r\n                        dignissim suscipit ante vitae, consectetur luctus ex.\r\n                        Sed at nunc quis lacus consectetur eleifend. Sed vitae\r\n                        luctus mauris. Curabitur semper id eros quis vulputate.\r\n                    </p>\r\n                    <p>\r\n                        Maecenas enim mauris, vehicula et erat hendrerit,\r\n                        vulputate suscipit ipsum. Maecenas quis arcu eget tellus\r\n                        imperdiet vulputate vel et quam. Suspendisse a dolor\r\n                        erat. Vivamus dapibus tempus risus, ut egestas arcu\r\n                        dignissim eu. Suspendisse rutrum lacus ipsum, sed\r\n                        placerat turpis aliquam vitae. Aliquam pulvinar, quam in\r\n                        ornare vulputate, nisl sapien molestie neque, sed\r\n                        bibendum mi nibh a sapien. Pellentesque sagittis feugiat\r\n                        aliquet. Aliquam erat volutpat. Nulla luctus porta\r\n                        velit, in fermentum tellus accumsan non. In nec\r\n                        condimentum urna. Cras porta nisl id velit volutpat\r\n                        sollicitudin. Nullam gravida leo at lorem hendrerit, vel\r\n                        ultricies erat tempor. Duis sit amet sapien lectus.\r\n                        Integer eleifend pretium laoreet. Nullam lacus sapien,\r\n                        luctus ut varius eu, ultricies nec erat. Suspendisse\r\n                        efficitur elementum ligula ut tincidunt. Morbi fringilla\r\n                        leo non maximus luctus. Aenean nec sapien magna. Sed\r\n                        lobortis tincidunt leo, consequat aliquam lorem varius\r\n                        id. Quisque tellus elit, condimentum in mauris et,\r\n                        fermentum ullamcorper nibh. Nulla at tortor sem. Nam eu\r\n                        auctor enim. Sed ante orci, tincidunt a tristique vel,\r\n                        lacinia non enim.\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default LearnMainPage;\r\n","import React from \"react\";\r\n\r\n// Router\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\n// Bootstrap Components\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n// rrf\r\nimport { useFirebase } from \"react-redux-firebase\";\r\n\r\nconst SignedInLinks = (props) => {\r\n    const firebase = useFirebase();\r\n    const userLetter = props.profile.username ? props.profile.username : \"\";\r\n\r\n    const logout = () => {\r\n        setTimeout(() => {\r\n            props.setExpanded(false);\r\n        }, 50);\r\n        firebase.logout().then(() => {\r\n            props.logoutSuccess();\r\n        });\r\n        props.history.push(\"/\");\r\n    };\r\n\r\n    if (userLetter) {\r\n        return (\r\n            <Nav className='justify-content-end' style={{ flex: 1 }}>\r\n                <span style={{ padding: \"0.5rem\", color: \"#777777\" }}>|</span>\r\n                <Nav.Item>\r\n                    <NavLink\r\n                        className='nav-link'\r\n                        style={{ textDecoration: \"none\" }}\r\n                        to='/Account'\r\n                        onClick={() =>\r\n                            setTimeout(() => {\r\n                                props.setExpanded(false);\r\n                            }, 50)\r\n                        }\r\n                    >\r\n                        {userLetter}\r\n                    </NavLink>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <span\r\n                        onClick={logout}\r\n                        className='nav-link'\r\n                        style={{ cursor: \"pointer\" }}\r\n                    >\r\n                        Logout\r\n                    </span>\r\n                </Nav.Item>\r\n            </Nav>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logoutSuccess: () => {\r\n            dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n        },\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(SignedInLinks));\r\n","import React from \"react\";\r\n\r\n// Router\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// Bootstrap Components\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\n//TODO: Add conditional formatting once server is made.\r\n\r\nconst SignedOutLinks = (props) => {\r\n    return (\r\n        <Nav className='justify-content-end' style={{ flex: 1 }}>\r\n            <span style={{ padding: \"0.5rem\", color: \"#777777\" }}>|</span>\r\n            <Nav.Item>\r\n                <NavLink\r\n                    className='nav-link'\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to='/Login'\r\n                    onClick={() =>\r\n                        setTimeout(() => {\r\n                            props.setExpanded(false);\r\n                        }, 50)\r\n                    }\r\n                >\r\n                    Login\r\n                </NavLink>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <NavLink\r\n                    className='nav-link'\r\n                    style={{ textDecoration: \"none\", cursor: \"pointer\" }}\r\n                    to='/CreateAccount'\r\n                    onClick={() =>\r\n                        setTimeout(() => {\r\n                            props.setExpanded(false);\r\n                        }, 50)\r\n                    }\r\n                >\r\n                    Create Account\r\n                </NavLink>\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React, { useState } from \"react\";\r\n\r\n// React Components\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport NavBar from \"react-bootstrap/NavBar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\n// React Router\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/NavBar\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\n//TODO: [A301212-113] Collapse navbar when link is selected.\r\n\r\nconst NavCom = (props) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    return (\r\n        <NavBar\r\n            expanded={expanded}\r\n            expand='md'\r\n            style={{ backgroundColor: \"#fff\" }}\r\n            variant='light'\r\n        >\r\n            <Container fluid>\r\n                <Navbar.Brand>\r\n                    <Link style={{ textDecoration: \"none\" }} to='/'>\r\n                        <span className='brandName'>Fair / Share</span>\r\n                    </Link>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle\r\n                    aria-controls='basic-navbar-nav'\r\n                    onClick={() => setExpanded(expanded ? false : \"expanded\")}\r\n                />\r\n                <Navbar.Collapse id='basic-navbar-nav' className='ml-3'>\r\n                    <Nav className='mr-auto'>\r\n                        <NavLink\r\n                            className='nav-link'\r\n                            exact\r\n                            to='/'\r\n                            onClick={() =>\r\n                                setTimeout(() => {\r\n                                    setExpanded(false);\r\n                                }, 50)\r\n                            }\r\n                        >\r\n                            Home\r\n                        </NavLink>\r\n                        <NavLink\r\n                            className='nav-link'\r\n                            exact\r\n                            to='/Learn'\r\n                            onClick={() =>\r\n                                setTimeout(() => {\r\n                                    setExpanded(false);\r\n                                }, 50)\r\n                            }\r\n                        >\r\n                            Learn\r\n                        </NavLink>\r\n                        <span style={{ padding: \"0.5rem\", color: \"#777777\" }}>\r\n                            |\r\n                        </span>\r\n\r\n                        <span\r\n                            className=''\r\n                            style={{\r\n                                display: \"block\",\r\n                                padding: \"0.5rem\",\r\n                                fontWeight: \"500\",\r\n                            }}\r\n                        >\r\n                            Share:\r\n                        </span>\r\n                        <NavLink\r\n                            className='nav-link'\r\n                            to='/Distribute/localremote/Rent'\r\n                            onClick={() =>\r\n                                setTimeout(() => {\r\n                                    setExpanded(false);\r\n                                }, 50)\r\n                            }\r\n                        >\r\n                            Rent\r\n                        </NavLink>\r\n                        <NavLink\r\n                            className='nav-link'\r\n                            to='/Distribute/localremote/Goods'\r\n                            onClick={() =>\r\n                                setTimeout(() => {\r\n                                    setExpanded(false);\r\n                                }, 50)\r\n                            }\r\n                        >\r\n                            Goods\r\n                        </NavLink>\r\n                        <NavLink\r\n                            className='nav-link'\r\n                            to='/Distribute/localremote/Divorce'\r\n                            onClick={() =>\r\n                                setTimeout(() => {\r\n                                    setExpanded(false);\r\n                                }, 50)\r\n                            }\r\n                        >\r\n                            Finances\r\n                        </NavLink>\r\n                    </Nav>\r\n                    {props.authStatus.isLoaded &&\r\n                        (props.authStatus.uid ? (\r\n                            <SignedInLinks\r\n                                profile={props.profile}\r\n                                setExpanded={setExpanded}\r\n                            />\r\n                        ) : (\r\n                            <SignedOutLinks setExpanded={setExpanded} />\r\n                        ))}\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </NavBar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state)\r\n    return {\r\n        authStatus: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavCom);\r\n","import React from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container fluid style={{ height: \"75vh\" }}>\r\n            <Row\r\n                className='align-items-center h-75 justify-content-center'\r\n                style={{ backgroundColor: \"#303030\", zIndex: \"10\" }}\r\n            >\r\n                <Col style={{ marginTop: \"25px\" }}>\r\n                    <a style={{ textDecoration: \"none\" }} href='/'>\r\n                        <h2 className='footerLink'>Home</h2>\r\n                    </a>\r\n                    <a style={{ textDecoration: \"none\" }} href='/Learn'>\r\n                        <h2 className='footerLink'>Learn</h2>\r\n                    </a>\r\n                    <a\r\n                        style={{ textDecoration: \"none\" }}\r\n                        href='/Distribute/localremote/Rent'\r\n                    >\r\n                        <h2 className='footerLink'>Distribute Rent</h2>\r\n                    </a>\r\n                    <a\r\n                        style={{ textDecoration: \"none\" }}\r\n                        href='/Distribute/localremote/Goods'\r\n                    >\r\n                        <h2 className='footerLink'>Distribute Goods</h2>\r\n                    </a>\r\n                    <a\r\n                        style={{ textDecoration: \"none\" }}\r\n                        href='/Distribute/localremote/Divorce'\r\n                    >\r\n                        <h2 className='footerLink'>Separate Finances</h2>\r\n                    </a>\r\n                    <br />\r\n                    <a style={{ textDecoration: \"none\" }} href='/Login'>\r\n                        <h2 className='footerLink'>Login</h2>\r\n                    </a>\r\n                    <a style={{ textDecoration: \"none\" }} href='/CreateAccount'>\r\n                        <h2 className='footerLink'>Create Account</h2>\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row\r\n                className='align-items-end h-25 justify-content-center'\r\n                style={{ backgroundColor: \"#303030\", zIndex: \"10\" }}\r\n            >\r\n                <Col style={{ marginBottom: \"25px\" }}>\r\n                    <h2\r\n                        className='footerText'\r\n                        style={{ color: \"#fff\", fontSize: \"12.5px\" }}\r\n                    >\r\n                        Icons made by{\" \"}\r\n                        <a\r\n                            style={{\r\n                                textDecoration: \"none\",\r\n                                fontSize: \"12.5px\",\r\n                            }}\r\n                            className='footerLink'\r\n                            href='https://www.flaticon.com/authors/freepik'\r\n                            title='Freepik'\r\n                        >\r\n                            Freepik\r\n                        </a>{\" \"}\r\n                        from{\" \"}\r\n                        <a\r\n                            style={{\r\n                                textDecoration: \"none\",\r\n                                fontSize: \"12.5px\",\r\n                            }}\r\n                            className='footerLink'\r\n                            href='https://www.flaticon.com/'\r\n                            title='Flaticon'\r\n                        >\r\n                            www.flaticon.com\r\n                        </a>\r\n                    </h2>\r\n                    <h2\r\n                        className='footerText'\r\n                        style={{ color: \"#fff\", fontSize: \"12.5px\" }}\r\n                    >\r\n                        Step 1-4 icons and group image taken from{\" \"}\r\n                        <a\r\n                            style={{\r\n                                textDecoration: \"none\",\r\n                                fontSize: \"12.5px\",\r\n                            }}\r\n                            className='footerLink'\r\n                            href='https://undraw.co/'\r\n                            title='Freepik'\r\n                        >\r\n                            undraw.co\r\n                        </a>\r\n                    </h2>\r\n                    <h2 className='footerText'>\r\n                        Website designed and built by Emmanuils Borovikovs (EB)\r\n                    </h2>\r\n                    <a\r\n                        style={{ textDecoration: \"none\" }}\r\n                        href='https://github.com/EB1811'\r\n                    >\r\n                        <h2 className='footerLink'>GitHub</h2>\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { useFirebase, useFirestore } from \"react-redux-firebase\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CreateAccount = (props) => {\r\n    // Auth data.\r\n    const [email, setEmail] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [error, setError] = useState();\r\n    const firebase = useFirebase();\r\n    const firestore = useFirestore();\r\n    // Getting from store.\r\n    const authLoaded = useSelector((state) => state.firebase.auth.isLoaded);\r\n    const authId = useSelector((state) => state.firebase.auth.uid);\r\n\r\n    // Creating an error massage from the given Error object.\r\n    const errorMessage = (error) => {\r\n        console.log(\"Signup Failed: \", error.message);\r\n        setError(\"Signup Failed: \" + error.message);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (email && pass) {\r\n            if (username) {\r\n                firebase\r\n                    .createUser(\r\n                        { email: email, password: pass },\r\n                        { username: username, email: email }\r\n                    )\r\n                    .then(async () => {\r\n                        const user = firebase.auth().currentUser;\r\n                        try {\r\n                            await user.updateProfile({\r\n                                displayName: username,\r\n                            });\r\n                            await user.sendEmailVerification();\r\n                            await firestore.set(\r\n                                {\r\n                                    collection: \"SessionInvitations\",\r\n                                    doc: email,\r\n                                },\r\n                                { invites: {} }\r\n                            );\r\n                        } catch (err) {\r\n                            errorMessage(err);\r\n                        }\r\n                    })\r\n                    .then(() => {\r\n                        props.history.push(\"/\");\r\n                    })\r\n                    .catch((err) => {\r\n                        errorMessage(err);\r\n                    });\r\n            } else {\r\n                setEmail(\"\");\r\n                setUsername(\"\");\r\n                setPass(\"\");\r\n                errorMessage(Error(\"Username cannot be empty.\"));\r\n            }\r\n        }\r\n    };\r\n\r\n    if (authLoaded) {\r\n        if (!authId) {\r\n            return (\r\n                <Container fluid style={{ height: \"100vh\" }}>\r\n                    <Row className='align-items-center min-vh-100 justify-content-center divBlockWithContentTertiary'>\r\n                        <Col\r\n                            xs={10}\r\n                            sm={7}\r\n                            md={5}\r\n                            lg={4}\r\n                            xl={3}\r\n                            className='centerCard'\r\n                            style={{ maxWidth: \"510px\" }}\r\n                        >\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type='email'\r\n                                        value={email}\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='username'>\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        value={username}\r\n                                        onChange={(e) =>\r\n                                            setUsername(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='pass' className='mb-4'>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type='password'\r\n                                        value={pass}\r\n                                        onChange={(e) =>\r\n                                            setPass(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                                {error ? (\r\n                                    <Alert variant={\"danger\"}>{error}</Alert>\r\n                                ) : (\r\n                                    <h5>&nbsp;</h5>\r\n                                )}\r\n                                <Button\r\n                                    variant='primary'\r\n                                    type='submit'\r\n                                    size='sm'\r\n                                >\r\n                                    <span className='smButtonText'>\r\n                                        Create Account\r\n                                    </span>\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        } else {\r\n            return <Redirect to='/' />;\r\n        }\r\n    } else {\r\n        return (\r\n            <div\r\n                style={{\r\n                    height: \"1000vh\",\r\n                    width: \"1000vh\",\r\n                    position: \"fixed\",\r\n                    top: \"0\",\r\n                    left: \"0\",\r\n                    zIndex: \"100\",\r\n                    backgroundColor: \"#fff\",\r\n                }}\r\n            ></div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CreateAccount;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { useFirebase } from \"react-redux-firebase\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Login = (props) => {\r\n    // Auth data.\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [error, setError] = useState();\r\n    const firebase = useFirebase();\r\n    // Getting from store.\r\n    const authLoaded = useSelector((state) => state.firebase.auth.isLoaded);\r\n    const authId = useSelector((state) => state.firebase.auth.uid);\r\n\r\n    // Creating an error massage from the given Error object.\r\n    const errorMessage = (error) => {\r\n        console.log(\"Login Failed: \", error.message);\r\n        setError(\"Login Failed: \" + error.message);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (email && pass) {\r\n            firebase\r\n                .login({ email: email, password: pass })\r\n                .then(() => {\r\n                    props.history.push(\"/\");\r\n                })\r\n                .catch((err) => {\r\n                    setEmail(\"\");\r\n                    setPass(\"\");\r\n                    errorMessage(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    if (authLoaded) {\r\n        if (!authId) {\r\n            return (\r\n                <Container fluid style={{ height: \"100vh\" }}>\r\n                    <Row className='align-items-center min-vh-100 justify-content-center divBlockWithContentTertiary'>\r\n                        <Col\r\n                            xs={10}\r\n                            sm={7}\r\n                            md={5}\r\n                            lg={4}\r\n                            xl={3}\r\n                            className='centerCard'\r\n                            style={{ maxWidth: \"510px\" }}\r\n                        >\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type='email'\r\n                                        value={email}\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='pass' className='mb-4'>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type='password'\r\n                                        value={pass}\r\n                                        onChange={(e) =>\r\n                                            setPass(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                                {error ? (\r\n                                    <Alert variant={\"danger\"}>{error}</Alert>\r\n                                ) : (\r\n                                    <h5>&nbsp;</h5>\r\n                                )}\r\n                                <Button\r\n                                    variant='primary'\r\n                                    type='submit'\r\n                                    size='sm'\r\n                                >\r\n                                    <span className='smButtonText'>Login</span>\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        } else {\r\n            return <Redirect to='/' />;\r\n        }\r\n    } else {\r\n        return (\r\n            <div\r\n                style={{\r\n                    height: \"1000vh\",\r\n                    width: \"1000vh\",\r\n                    position: \"fixed\",\r\n                    top: \"0\",\r\n                    left: \"0\",\r\n                    zIndex: \"100\",\r\n                    backgroundColor: \"#fff\",\r\n                }}\r\n            ></div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { useFirebase } from \"react-redux-firebase\";\r\n\r\nconst ChangeEmailForm = (props) => {\r\n    const firebase = useFirebase();\r\n\r\n    // Change email.\r\n    const [email, setEmail] = useState(\"\");\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (email) {\r\n            firebase\r\n                .updateEmail(email, true)\r\n                .then(() => {\r\n                    console.log(\"Email Updated\");\r\n                    props.setEmailChange(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.message);\r\n                    props.setErrorMessage(err.message);\r\n                });\r\n        }\r\n    };\r\n    //! If the user clicks the email link asking to revert email change, profile and auth emails are out of sync, i.e., profile email is not reverted.\r\n    //! Known issue with react-redux-firebase: https://github.com/prescottprue/react-redux-firebase/issues/859\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} style={{ display: \"inline-block\" }}>\r\n            <Form.Group controlId='email'>\r\n                <Form.Control\r\n                    type='email'\r\n                    size='sm'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ChangeEmailForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { useFirebase } from \"react-redux-firebase\";\r\n\r\nconst ChangeUsernameForm = (props) => {\r\n    const firebase = useFirebase();\r\n\r\n    // Change email.\r\n    const [username, setUsername] = useState(\"\");\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (username) {\r\n            firebase\r\n                .updateProfile({ username: username })\r\n                .then(async () => {\r\n                    const user = firebase.auth().currentUser;\r\n                    try {\r\n                        await user.updateProfile({\r\n                            displayName: username,\r\n                        });\r\n                    } catch (err) {\r\n                        props.setErrorMessage(err.message);\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    console.log(\"Username Updated\");\r\n                    props.setUsernameChange(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.message);\r\n                    props.setErrorMessage(err.message);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} style={{ display: \"inline-block\" }}>\r\n            <Form.Group controlId='username'>\r\n                <Form.Control\r\n                    type='text'\r\n                    size='sm'\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ChangeUsernameForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { useFirebase } from \"react-redux-firebase\";\r\n\r\nconst ChangePasswordForm = (props) => {\r\n    const firebase = useFirebase();\r\n\r\n    // Change email.\r\n    const [password, setPassword] = useState(\"\");\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (password) {\r\n            var user = firebase.auth().currentUser;\r\n\r\n            user.updatePassword(password)\r\n                .then(() => {\r\n                    console.log(\"Password Changed\");\r\n                    props.setPassChange(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.message);\r\n                    props.setErrorMessage(err.message);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} style={{ display: \"inline-block\" }}>\r\n            <Form.Group controlId='password'>\r\n                <Form.Control\r\n                    type='password'\r\n                    size='sm'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ChangePasswordForm;\r\n","import React from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst AccountBoardPastSessionDisplay = ({ session, uid }) => {\r\n    //? Can refractor this to make adding new share types easier.\r\n    return (\r\n        <Card\r\n            style={{\r\n                color: \"#000\",\r\n                textAlign: \"left\",\r\n            }}\r\n            className='mt-2'\r\n        >\r\n            <Card.Body>\r\n                <div>\r\n                    Type:{\" \"}\r\n                    {session.type === \"Divorce\" ? \"Finances\" : session.type}\r\n                </div>\r\n                <hr />\r\n                <div className='text-muted mb-2'>\r\n                    Group: {session.group.map((user) => user.username + \", \")}\r\n                </div>\r\n                <div className='text-muted'>\r\n                    {session.type === \"Rent\" ? (\r\n                        <div>\r\n                            <div>Number of rooms: {session.goods.length}</div>\r\n                            <div>Total house cost: ${session.totalCost}</div>\r\n                        </div>\r\n                    ) : (\r\n                        <span>\r\n                            Goods:{\" \"}\r\n                            {session.goods.map((good) => good.Good + \", \")}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n                <div className='text-muted'>\r\n                    {session.type === \"Divorce\" ? (\r\n                        <div>Money: ${session.moneyAmount}</div>\r\n                    ) : null}\r\n                </div>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <strong className='text-muted blueText'>\r\n                    Your allocation was:{\" \"}\r\n                    {session.type === \"Rent\"\r\n                        ? session.allocations[uid].room +\r\n                          \" at $\" +\r\n                          session.allocations[uid].price\r\n                        : session.allocations[uid].goods}\r\n                    {session.type === \"Divorce\" ? (\r\n                        <div>+ ${session.allocations[uid].money}</div>\r\n                    ) : null}\r\n                </strong>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AccountBoardPastSessionDisplay;\r\n","import React from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst LoadingScreen = () => {\r\n    return (\r\n        <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n            <Row className='justify-content-center align-items-center min-vh-100'>\r\n                <Spinner animation='border' role='status' variant='primary'>\r\n                    <span className='sr-only'>Loading...</span>\r\n                </Spinner>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirebase, useFirestore } from \"react-redux-firebase\";\r\n\r\nimport ChangeEmailForm from \"./AccountActions/ChangeEmailForm\";\r\nimport ChangeUsernameForm from \"./AccountActions/ChangeUsernameForm\";\r\nimport ChangePasswordForm from \"./AccountActions/ChangePasswordForm\";\r\nimport AccountBoardPastSessionDisplay from \"./AccountBoardPastSessionDisplay\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\n\r\nconst AccountBoard = () => {\r\n    const firebase = useFirebase();\r\n    const firestore = useFirestore();\r\n\r\n    // Getting from store.\r\n    const profile = useSelector((state) => state.firebase.profile);\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n\r\n    // Message could be set in input components.\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    // Show input components when true.\r\n    const [emailChange, setEmailChange] = useState(false);\r\n    const [usernameChange, setUsernameChange] = useState(false);\r\n    const [passChange, setPassChange] = useState(false);\r\n\r\n    // List of session where this user was in.\r\n    const [pastSessions, setPastSessions] = useState();\r\n\r\n    // Get past share sessions this user was in.\r\n    useEffect(() => {\r\n        if (profile.isLoaded && !pastSessions) {\r\n            const userInfo = {\r\n                userEmail: profile.email,\r\n                username: profile.username,\r\n            };\r\n            firestore\r\n                .get({\r\n                    collection: \"ShareSessions\",\r\n                    where: [\r\n                        [\"active\", \"==\", false],\r\n                        [\"group\", \"array-contains\", userInfo],\r\n                    ],\r\n                })\r\n                .then((docSnap) => {\r\n                    // Convert results to array containing the session objects.\r\n                    const tempArr = [];\r\n                    docSnap.docs.forEach((result) => {\r\n                        tempArr.push({ id: result.id, data: result.data() });\r\n                    });\r\n                    setPastSessions(tempArr);\r\n                    console.log(\"Successfully retrieved past share sessions\");\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.message);\r\n                });\r\n        }\r\n    }, [firestore, pastSessions, profile]);\r\n\r\n    // Show 'email sent' display if true.\r\n    const [vEmailSent, setVEmailSent] = useState(false);\r\n    const verify = () => {\r\n        const user = firebase.auth().currentUser;\r\n        user.sendEmailVerification()\r\n            .then(() => {\r\n                console.log(\"Email Sent\");\r\n                setVEmailSent(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error: \" + err.message);\r\n                setErrorMessage(err.message);\r\n            });\r\n    };\r\n\r\n    // Variable used for confirmation. Set true after 1 click -> display button to trigger function if true.\r\n    const [delAccountSelected, setDelAccountSelected] = useState(false);\r\n    const deleteAccount = () => {\r\n        const uid = auth.uid;\r\n        const user = firebase.auth().currentUser;\r\n        //! BUG: [A301212-88] If delete() fails, user info in firestore is still deleted. Can solve with a dedicated reauthenticate.\r\n        firestore.delete({\r\n            collection: \"users\",\r\n            doc: uid,\r\n        });\r\n        firestore.delete({\r\n            collection: \"SessionInvitations\",\r\n            doc: auth.email,\r\n        });\r\n        user.delete()\r\n            .then(() => {\r\n                console.log(\"Account Deleted\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error: \" + err.message);\r\n                setErrorMessage(err.message);\r\n            });\r\n    };\r\n\r\n    //? Maybe split past sessions into seperate page.\r\n    if (profile.isLoaded && auth.isLoaded && pastSessions) {\r\n        if (profile && !auth.isEmpty) {\r\n            return (\r\n                <Container fluid className='min-vh-100'>\r\n                    <Row className='align-items-center min-vh-100 justify-content-center divBlockWithContentTertiary'>\r\n                        <Col\r\n                            xs={10}\r\n                            sm={7}\r\n                            md={5}\r\n                            lg={4}\r\n                            xl={3}\r\n                            className='centerCardCompact my-3'\r\n                            style={{ maxWidth: \"510px\" }}\r\n                        >\r\n                            <Row>\r\n                                <Col>\r\n                                    <h4>{profile.username}</h4>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr />\r\n                            <div className='d-flex textLink'>\r\n                                <span className='text-muted'>\r\n                                    Email:{\" \"}\r\n                                    <span className='ml-1'>\r\n                                        {emailChange ? (\r\n                                            <ChangeEmailForm\r\n                                                setEmailChange={setEmailChange}\r\n                                                setErrorMessage={\r\n                                                    setErrorMessage\r\n                                                }\r\n                                            />\r\n                                        ) : (\r\n                                            profile.email\r\n                                        )}\r\n                                    </span>\r\n                                </span>\r\n                                <span className='ml-auto'>\r\n                                    {!emailChange ? (\r\n                                        <button\r\n                                            onClick={() => setEmailChange(true)}\r\n                                            disabled={emailChange}\r\n                                            className='ml-auto text-muted btn btn-link textLink'\r\n                                            style={{\r\n                                                padding: \"0\",\r\n                                                border: \"none\",\r\n                                            }}\r\n                                        >\r\n                                            Change\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                setEmailChange(false)\r\n                                            }\r\n                                            className='ml-auto text-muted btn btn-link textLink'\r\n                                            style={{\r\n                                                padding: \"0\",\r\n                                                border: \"none\",\r\n                                            }}\r\n                                        >\r\n                                            Cancel\r\n                                        </button>\r\n                                    )}\r\n                                </span>\r\n                            </div>\r\n                            <div className='d-flex textLink'>\r\n                                <span className='text-muted '>\r\n                                    Email Verified:{\" \"}\r\n                                    <span className='ml-1'>\r\n                                        {auth.emailVerified ? \"Yes\" : \"No\"}\r\n                                    </span>\r\n                                </span>\r\n                                {!auth.emailVerified ? (\r\n                                    <button\r\n                                        onClick={() => verify()}\r\n                                        disabled={vEmailSent}\r\n                                        className='ml-auto text-muted btn btn-link textLink'\r\n                                        style={{\r\n                                            padding: \"0\",\r\n                                            border: \"none\",\r\n                                        }}\r\n                                    >\r\n                                        {vEmailSent ? \"Email Sent\" : \"Verify\"}\r\n                                    </button>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='d-flex textLink'>\r\n                                <span className='text-muted '>\r\n                                    Username:{\" \"}\r\n                                    <span className='ml-1'>\r\n                                        {usernameChange ? (\r\n                                            <ChangeUsernameForm\r\n                                                setUsernameChange={\r\n                                                    setUsernameChange\r\n                                                }\r\n                                                setErrorMessage={\r\n                                                    setErrorMessage\r\n                                                }\r\n                                            />\r\n                                        ) : (\r\n                                            profile.username\r\n                                        )}\r\n                                    </span>\r\n                                </span>\r\n                                <span className='ml-auto'>\r\n                                    {!usernameChange ? (\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                setUsernameChange(true)\r\n                                            }\r\n                                            className='ml-auto text-muted btn btn-link textLink'\r\n                                            style={{\r\n                                                padding: \"0\",\r\n                                                border: \"none\",\r\n                                            }}\r\n                                        >\r\n                                            Change\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                setUsernameChange(false)\r\n                                            }\r\n                                            className='ml-auto text-muted btn btn-link textLink'\r\n                                            style={{\r\n                                                padding: \"0\",\r\n                                                border: \"none\",\r\n                                            }}\r\n                                        >\r\n                                            Cancel\r\n                                        </button>\r\n                                    )}\r\n                                </span>\r\n                            </div>\r\n                            <div className='d-flex textLink'>\r\n                                <span className='text-muted '>\r\n                                    Password:{\" \"}\r\n                                    <span className='ml-1'>\r\n                                        {passChange ? (\r\n                                            <ChangePasswordForm\r\n                                                setPassChange={setPassChange}\r\n                                                setErrorMessage={\r\n                                                    setErrorMessage\r\n                                                }\r\n                                            />\r\n                                        ) : (\r\n                                            \"**********\"\r\n                                        )}\r\n                                    </span>\r\n                                </span>\r\n                                <span className='ml-auto'>\r\n                                    {!passChange ? (\r\n                                        <button\r\n                                            onClick={() => setPassChange(true)}\r\n                                            className='ml-auto text-muted btn btn-link textLink'\r\n                                            style={{\r\n                                                padding: \"0\",\r\n                                                border: \"none\",\r\n                                            }}\r\n                                        >\r\n                                            Change\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button\r\n                                            onClick={() => setPassChange(false)}\r\n                                            className='ml-auto text-muted btn btn-link textLink'\r\n                                            style={{\r\n                                                padding: \"0\",\r\n                                                border: \"none\",\r\n                                            }}\r\n                                        >\r\n                                            Cancel\r\n                                        </button>\r\n                                    )}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div\r\n                                className='d-flex textLinkSmall mt-3'\r\n                                style={{\r\n                                    fontStyle: \"italic\",\r\n                                }}\r\n                            >\r\n                                <span className='text-muted'>\r\n                                    Account Created:{\" \"}\r\n                                    <span\r\n                                        style={{\r\n                                            fontStyle: \"italic\",\r\n                                        }}\r\n                                        className='ml-1'\r\n                                    >\r\n                                        {new Date(\r\n                                            auth.createdAt * 1\r\n                                        ).toLocaleDateString()}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div\r\n                                className='d-flex textLinkSmall'\r\n                                style={{\r\n                                    fontStyle: \"italic\",\r\n                                }}\r\n                            >\r\n                                <span className='text-muted'>\r\n                                    Last Logged In:{\" \"}\r\n                                    <span\r\n                                        style={{\r\n                                            fontStyle: \"italic\",\r\n                                        }}\r\n                                        className='ml-1'\r\n                                    >\r\n                                        {new Date(\r\n                                            auth.lastLoginAt * 1\r\n                                        ).toLocaleDateString()}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div\r\n                                className='d-flex mt-2'\r\n                                style={{\r\n                                    fontStyle: \"italic\",\r\n                                }}\r\n                            >\r\n                                <span className='text-muted'>\r\n                                    {delAccountSelected ? (\r\n                                        <button\r\n                                            onClick={() => deleteAccount()}\r\n                                            className='ml-auto text-muted btn btn-link textLinkSmall'\r\n                                            style={{\r\n                                                padding: \"0\",\r\n                                                border: \"none\",\r\n                                            }}\r\n                                        >\r\n                                            Click to confirm\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                setDelAccountSelected(true)\r\n                                            }\r\n                                            className='ml-auto text-muted btn btn-link textLinkSmall'\r\n                                            style={{\r\n                                                fontStyle: \"italic\",\r\n                                                padding: \"0\",\r\n                                                border: \"none\",\r\n                                            }}\r\n                                        >\r\n                                            Delete Account\r\n                                        </button>\r\n                                    )}\r\n                                </span>\r\n                            </div>\r\n                            {errorMessage ? (\r\n                                <div\r\n                                    className='d-flex textLink mt-2'\r\n                                    style={{\r\n                                        fontStyle: \"italic\",\r\n                                    }}\r\n                                >\r\n                                    <span\r\n                                        style={{\r\n                                            color: \"red\",\r\n                                        }}\r\n                                    >\r\n                                        {errorMessage}\r\n                                    </span>\r\n                                </div>\r\n                            ) : null}\r\n                            <hr />\r\n                            {!pastSessions ? (\r\n                                <h5>No Past Share Sessions</h5>\r\n                            ) : (\r\n                                <div>\r\n                                    <h5 className='mb-4'>\r\n                                        Past Share Sessions\r\n                                    </h5>\r\n                                    {pastSessions.map((session) => (\r\n                                        <AccountBoardPastSessionDisplay\r\n                                            key={session.id}\r\n                                            session={session.data}\r\n                                            uid={auth.uid}\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        } else {\r\n            return <Redirect to='/' />;\r\n        }\r\n    } else {\r\n        // Loading screen.\r\n        return <LoadingScreen />;\r\n    }\r\n};\r\nexport default AccountBoard;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop({ history }) {\r\n    useEffect(() => {\r\n        const unlisten = history.listen(() => {\r\n            window.scrollTo(0, 0);\r\n        });\r\n        return () => {\r\n            unlisten();\r\n        };\r\n    }, [history]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\n\r\nconst InviteToSessionNotificationModal = ({\r\n    sessionID,\r\n    info,\r\n    joinSession,\r\n    declineSession,\r\n}) => {\r\n    return (\r\n        <Toast>\r\n            <Toast.Header>\r\n                <strong className='mx-auto'>Share Invitation</strong>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n                <p\r\n                    className='text-muted mx-auto'\r\n                    style={{ fontSize: \"0.9rem\" }}\r\n                >\r\n                    {info.ownerUsername} has invited you to a share session.\r\n                </p>\r\n                <Button\r\n                    variant='outline-success'\r\n                    size='sm'\r\n                    onClick={() => joinSession(sessionID)}\r\n                >\r\n                    Accept\r\n                </Button>\r\n                <Button\r\n                    variant='outline-danger'\r\n                    size='sm'\r\n                    className='ml-2'\r\n                    onClick={() => declineSession(sessionID)}\r\n                >\r\n                    Decline\r\n                </Button>\r\n            </Toast.Body>\r\n        </Toast>\r\n    );\r\n};\r\n\r\nexport default InviteToSessionNotificationModal;\r\n","import React from \"react\";\r\n\r\nimport InviteToSessionNotificationModal from \"./InviteToSessionNotificationModal\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { useFirestoreConnect, useFirestore } from \"react-redux-firebase\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SessionNotificationOverlay = ({ auth, history }) => {\r\n    const firestore = useFirestore();\r\n    useFirestoreConnect([\r\n        { collection: \"SessionInvitations\", doc: auth.email },\r\n    ]);\r\n    const sessionInvites = useSelector(\r\n        ({ firestore: { data } }) =>\r\n            data.SessionInvitations && data.SessionInvitations[auth.email]\r\n    );\r\n\r\n    /*\r\n    useEffect(() => {\r\n        if(sessionInvites) {\r\n            console.log(\"here\")\r\n            const newInvitations = invitations ? [...invitations] : []\r\n            Object.entries(sessionInvites).forEach(([sessionID, info]) => {\r\n                newInvitations.push({sessionID: sessionID, ownerUsername: info.ownerUsername, url: `/Distribute/GroupInfo/Remote/${sessionID}/${info.type}`})\r\n            });\r\n\r\n            setInvitations(newInvitations)\r\n        }\r\n    }, [invitations, sessionInvites])\r\n    */\r\n\r\n    // Remove invitation from firestore and redirect to session page.\r\n    const joinSession = (sessionID) => {\r\n        const newInvites = JSON.parse(JSON.stringify(sessionInvites.invites));\r\n        delete newInvites[sessionID];\r\n        firestore\r\n            .update(\r\n                { collection: \"SessionInvitations\", doc: auth.email },\r\n                { invites: newInvites }\r\n            )\r\n            .then(() => {\r\n                window.location.href = `/Distribute/GroupInfo/Remote/${sessionID}`;\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            });\r\n    };\r\n    const declineSession = (sessionID) => {\r\n        const newInvites = JSON.parse(JSON.stringify(sessionInvites.invites));\r\n        delete newInvites[sessionID];\r\n        firestore\r\n            .update(\r\n                { collection: \"SessionInvitations\", doc: auth.email },\r\n                { invites: newInvites }\r\n            )\r\n            .then(() => {\r\n                console.log(\"Success\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            });\r\n    };\r\n\r\n    //TODO: [A301212-107] Notification styling.\r\n    if (sessionInvites && auth.isLoaded) {\r\n        if (Object.entries(sessionInvites.invites).length > 0) {\r\n            return (\r\n                <div className='notificationOverlay'>\r\n                    <div className='stickynot'>\r\n                        {Object.entries(sessionInvites.invites).map(\r\n                            (invite) => (\r\n                                <InviteToSessionNotificationModal\r\n                                    key={invite[0]}\r\n                                    sessionID={invite[0]}\r\n                                    info={invite[1]}\r\n                                    joinSession={joinSession}\r\n                                    declineSession={declineSession}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default withRouter(SessionNotificationOverlay);\r\n","// Determine if user wants to share locally or remotely.\r\nconst setShareMethod = (method) => {\r\n    return {\r\n        type: \"SET_SHARE_METHOD\",\r\n        method: method,\r\n    };\r\n};\r\n\r\nexport default {\r\n    setShareMethod,\r\n};\r\n","// Reset all data about group and goods in store.\r\nconst resetInfo = () => {\r\n    return {\r\n        type: \"RESET\",\r\n    };\r\n};\r\n\r\nexport default {\r\n    resetInfo,\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n//import Button from \"react-bootstrap/Button\";\r\n\r\nimport { withRouter, useParams, Redirect } from \"react-router\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport questionnaireActions from \"../../../ReduxStore/Actions/questionnaireActions\";\r\nimport resetDistributeAction from \"../../../ReduxStore/Actions/resetDistributeAction\";\r\n\r\nimport shareLocal from \"../../../Images/meeting-local-group_ICON.svg\";\r\nimport shareOnlineGroup from \"../../../Images/share-online-group_ICON.svg\";\r\n\r\nconst LocalOrRemoteQuestion = (props) => {\r\n    let { goodType } = useParams();\r\n    const firestore = useFirestore();\r\n\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    // Reset goods info upon entering.\r\n    useEffect(() => {\r\n        dispatch(resetDistributeAction.resetInfo());\r\n        // Only execute once so\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    // Set the group info gathering method (local or remote) then go to next question page. User must be logged in to use the remote option.\r\n    const setMethod = (method) => {\r\n        dispatch(questionnaireActions.setShareMethod(method));\r\n\r\n        if (method === \"remote\" && auth.isEmpty) {\r\n            props.history.push(\"/login\");\r\n        } else if (method === \"remote\") {\r\n            // Setup session info and add to firestore.\r\n            firestore\r\n                .add(\r\n                    { collection: \"ShareSessions\" },\r\n                    {\r\n                        owner: auth.uid,\r\n                        type: goodType,\r\n                        active: true,\r\n                    }\r\n                )\r\n                .then((docSnapshot) => {\r\n                    props.history.push(\r\n                        `/Distribute/GoodInfo/Remote/${docSnapshot.id}`\r\n                    );\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            props.history.push(`/Distribute/GoodInfo/Local/${goodType}`);\r\n        }\r\n    };\r\n\r\n    if (\r\n        (goodType === \"Rent\") |\r\n        (goodType === \"Goods\") |\r\n        (goodType === \"Divorce\")\r\n    ) {\r\n        return (\r\n            <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                    <Col\r\n                        xs={11}\r\n                        sm={11}\r\n                        md={10}\r\n                        lg={7}\r\n                        xl={5}\r\n                        className='centerCard m-3'\r\n                        style={{ maxWidth: \"800px\" }}\r\n                    >\r\n                        <Row>\r\n                            <Col xs={12} sm={6} className='my-2'>\r\n                                <img\r\n                                    src={shareLocal}\r\n                                    className='SVGButton'\r\n                                    alt='meeting-local-group_ICON'\r\n                                    onClick={() => setMethod(\"local\")}\r\n                                />\r\n                                <p\r\n                                    className='mt-3 text-muted'\r\n                                    style={{ fontSize: \"0.9rem\" }}\r\n                                >\r\n                                    Share locally, passing your device around to\r\n                                    gather everyone's valuations. No login\r\n                                    needed.\r\n                                </p>\r\n                            </Col>\r\n                            <Col xs={12} sm={6} className='my-2'>\r\n                                <img\r\n                                    src={shareOnlineGroup}\r\n                                    className='SVGButton'\r\n                                    alt='share-online-group_ICON.svg'\r\n                                    onClick={() => setMethod(\"remote\")}\r\n                                />\r\n                                <p\r\n                                    className='mt-3 text-muted'\r\n                                    style={{ fontSize: \"0.9rem\" }}\r\n                                >\r\n                                    Share using an online group, having members\r\n                                    login and get invited to your party.\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return <Redirect to='/' />;\r\n    }\r\n};\r\n\r\nexport default withRouter(LocalOrRemoteQuestion);\r\n","import React from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst ErrorAlertModal = ({ errorMessage }) => {\r\n    return errorMessage ? (\r\n        <Alert variant={\"danger\"}>{errorMessage}</Alert>\r\n    ) : null;\r\n};\r\n\r\nexport default ErrorAlertModal;\r\n","import React, { useState } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport ErrorAlertModal from \"../../../Notifications/ErrorAlertModal\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\nconst InputGoodsInfo = (props) => {\r\n    // Goods Name.\r\n    const [goodName, setGoodName] = useState(\"\");\r\n    const [goodValue, setGoodValue] = useState(\"\");\r\n    // Store error message.\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    //* Add good to state and store.\r\n    //? Maybe make goods value and name not turn into a object for the state, i.e., simply pass goodName and goodValue.\r\n    const addGood = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            props.stateGoodsArray.filter((good) => good.Good === goodName)\r\n                .length > 0\r\n        ) {\r\n            setErrorMessage(\"Error! Good with name already exists.\");\r\n            setGoodName(\"\");\r\n        } else if (goodName === \"\") {\r\n            setErrorMessage(\"Error! Good name cannot be empty.\");\r\n        } else if (goodValue && goodValue < 1) {\r\n            setErrorMessage(\"Error! Good value cannot be less than 1.\");\r\n            setGoodValue(\"\");\r\n        } else {\r\n            let good = {\r\n                Good: String(goodName),\r\n                estValue: goodValue,\r\n                Value: 0,\r\n            };\r\n            // State\r\n            props.addGoods(good);\r\n\r\n            setGoodName(\"\");\r\n            setGoodValue(\"\");\r\n            setErrorMessage(\"\");\r\n        }\r\n    };\r\n    const deleteGood = (goodName) => {\r\n        props.deleteGood(goodName);\r\n    };\r\n    // Next state.\r\n    const nextPage = () => {\r\n        if (props.stateGoodsArray.length < 1) {\r\n            setErrorMessage(\"Error! Must have at least 1 item.\");\r\n        } else {\r\n            setErrorMessage(\"\");\r\n            props.next();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h5>Enter a item's name and price.</h5>\r\n            <div\r\n                className='mt-4 py-2'\r\n                style={{\r\n                    borderTop: \"1px solid #999999\",\r\n                    borderBottom: \"1px solid #999999\",\r\n                }}\r\n            >\r\n                <Form onSubmit={addGood}>\r\n                    <Row className='align-items-center'>\r\n                        <Col xs={12} sm={9}>\r\n                            <Form.Control\r\n                                size='sm'\r\n                                placeholder='Name'\r\n                                value={goodName}\r\n                                type='text'\r\n                                onChange={(e) => setGoodName(e.target.value)}\r\n                                style={{\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    display: \"inline\",\r\n                                }}\r\n                            />\r\n                            <Form.Control\r\n                                size='sm'\r\n                                placeholder='Estimated Value (Optional)'\r\n                                value={goodValue}\r\n                                type='number'\r\n                                onChange={(e) => setGoodValue(e.target.value)}\r\n                                style={{\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    display: \"inline\",\r\n                                }}\r\n                                className='mt-1'\r\n                            />\r\n                        </Col>\r\n                        <Col xs={12} sm={3}>\r\n                            <Button\r\n                                variant='primary'\r\n                                size='md'\r\n                                className='m-3'\r\n                                type='submit'\r\n                            >\r\n                                <span>Add</span>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                <hr />\r\n                <Row className='justify-content-center contentOverflow mt-3'>\r\n                    <Col sm='10'>\r\n                        {props.stateGoodsArray.map((good) => (\r\n                            <Card\r\n                                style={{ color: \"#000\" }}\r\n                                key={good.Good}\r\n                                body\r\n                            >\r\n                                {good.Good} {good.estValue ? \"| \" : \" \"}\r\n                                {good.estValue}\r\n                                <button\r\n                                    className='close'\r\n                                    onClick={() => deleteGood(good.Good)}\r\n                                >\r\n                                    ×\r\n                                </button>\r\n                            </Card>\r\n                        ))}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n                <ErrorAlertModal errorMessage={errorMessage} />\r\n\r\n                {props.next ? (\r\n                    <Button variant='primary' size='sm' onClick={nextPage}>\r\n                        <span className='smButtonText'>Next</span>\r\n                    </Button>\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stateGoodsArray: state.distGoodsInfo.goodsArray,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addGoods: (good) => {\r\n            dispatch({ type: \"ADD_GOODS\", good: good });\r\n        },\r\n        deleteGood: (goodName) => {\r\n            dispatch({ type: \"DELETE_GOOD\", goodName: goodName });\r\n        },\r\n        updateTotalValue: (tValue) => {\r\n            dispatch({ type: \"UPDATE_TOTAL_VALUE\", i: tValue });\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputGoodsInfo);\r\n","import React from \"react\";\r\n\r\n// React Components\r\nimport InputGoodsInfo from \"./InputGoodsInfo\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Goods_GatherInfoPage = (props) => {\r\n    // Go to add users to group.\r\n    const next = () => {\r\n        props.history.push(\"/Distribute/GroupInfo/Local/Goods\");\r\n    };\r\n\r\n    //? Maybe have a variable in questions showing if all questions completed.\r\n    if (props.shareMethod) {\r\n        return (\r\n            <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                    <Col\r\n                        xs={10}\r\n                        sm={8}\r\n                        md={6}\r\n                        lg={5}\r\n                        xl={3}\r\n                        className='centerCardCompact m-3'\r\n                        style={{ maxWidth: \"510px\" }}\r\n                    >\r\n                        <InputGoodsInfo next={next} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return <Redirect to='/Distribute/localremote/Goods' />;\r\n    }\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        shareMethod: state.questionnaireAnswers.shareMethod,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Goods_GatherInfoPage);\r\n","import React, { useState } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport ErrorAlertModal from \"../../../Notifications/ErrorAlertModal\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\nconst InputRoomsInfo = (props) => {\r\n    // Information about goods.\r\n    // Uses session info if it exists (remote sharing).\r\n    const [houseValue, setHouseValue] = useState(\r\n        props.session\r\n            ? props.session.totalCost\r\n                ? props.session.totalCost\r\n                : 0\r\n            : props.stateHouseValue\r\n    );\r\n    const [roomCount, setRoomCount] = useState(\r\n        props.session\r\n            ? props.session.goods\r\n                ? props.session.goods.length\r\n                : 0\r\n            : props.stateRoomCount\r\n    );\r\n    // Store error message.\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Conditional styling\r\n        if (roomCount < 2) {\r\n            setErrorMessage(\"Error! Must have at least 2 rooms.\");\r\n        } else if (houseValue < 1) {\r\n            setErrorMessage(\"Error! Total house cost must be greater than 0.\");\r\n        } else if (roomCount > 1 && houseValue > 0) {\r\n            setErrorMessage(\"\");\r\n\r\n            // Action based on if remote or local method. Remote needs to pass info to next function so it can be added to firestore.\r\n            if (props.session) {\r\n                props.next(roomCount, houseValue);\r\n            } else {\r\n                props.addGoodsAmount(roomCount);\r\n                props.updateTotalValue(houseValue);\r\n                props.next();\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId='addRoomCount'>\r\n                <Form.Label>Number of rooms:</Form.Label>\r\n                <Form.Control\r\n                    size='sm'\r\n                    type='number'\r\n                    value={roomCount}\r\n                    onChange={(e) => setRoomCount(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId='addGoodsTValue'>\r\n                <Form.Label>Total monthly cost of house:</Form.Label>\r\n                <Form.Control\r\n                    size='sm'\r\n                    type='number'\r\n                    value={houseValue}\r\n                    onChange={(e) => setHouseValue(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n            <div className='mt-5'>\r\n                <ErrorAlertModal errorMessage={errorMessage} />\r\n                <Button variant='primary' type='submit' size='sm'>\r\n                    <span className='smButtonText'>Next</span>\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stateRoomCount: state.distGoodsInfo.goodsArray.length,\r\n        stateHouseValue: state.distGoodsInfo.totalValue,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addGoodsAmount: (item) => {\r\n            dispatch({ type: \"ADD_ROOMS\", roomCount: item });\r\n        },\r\n        updateTotalValue: (tValue) => {\r\n            dispatch({ type: \"UPDATE_TOTAL_VALUE\", i: tValue });\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputRoomsInfo);\r\n","import React from \"react\";\r\n\r\n// React Components\r\nimport InputRoomsInfo from \"./InputRoomsInfo\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Rent_GatherInfoPage = (props) => {\r\n    const next = () => {\r\n        props.history.push(\"/Distribute/GroupInfo/Local/Rent\");\r\n    };\r\n\r\n    if (props.shareMethod) {\r\n        return (\r\n            <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                    <Col\r\n                        xs={10}\r\n                        sm={8}\r\n                        md={6}\r\n                        lg={5}\r\n                        xl={3}\r\n                        className='centerCardCompact m-3'\r\n                        style={{ maxWidth: \"510px\" }}\r\n                    >\r\n                        <InputRoomsInfo next={next} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return <Redirect to='/Distribute/localremote/Rent' />;\r\n    }\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        shareMethod: state.questionnaireAnswers.shareMethod,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Rent_GatherInfoPage);\r\n","import React from \"react\";\r\n\r\n// React Components\r\nimport InputGoodsInfo from \"../Goods/InputGoodsInfo\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Divorce_GatherGoodsInfoPage = (props) => {\r\n    // Go to add users to group.\r\n    const next = () => {\r\n        props.history.push(\"/Distribute/GoodInfo/Local/Divorce2\");\r\n    };\r\n\r\n    //? Maybe have a variable in questions showing if all questions completed.\r\n    if (props.shareMethod) {\r\n        return (\r\n            <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                    <Col\r\n                        xs={10}\r\n                        sm={8}\r\n                        md={6}\r\n                        lg={5}\r\n                        xl={3}\r\n                        className='centerCardCompact m-3'\r\n                        style={{ maxWidth: \"510px\" }}\r\n                    >\r\n                        <InputGoodsInfo next={next} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return <Redirect to='/Distribute/localremote/Divorce' />;\r\n    }\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        shareMethod: state.questionnaireAnswers.shareMethod,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Divorce_GatherGoodsInfoPage);\r\n","import React, { useState } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport ErrorAlertModal from \"../../../Notifications/ErrorAlertModal\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\nconst InputMoneyInfo = (props) => {\r\n    // Information about goods.\r\n    const [moneyAmount, setMoneyAmount] = useState(\r\n        props.session\r\n            ? props.session.moneyAmount\r\n                ? props.session.moneyAmount\r\n                : 0\r\n            : props.stateMoneyAmount\r\n    );\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Conditional styling\r\n        if (moneyAmount < 0) {\r\n            setErrorMessage(\"Error: Amount cannot be negative.\");\r\n        } else {\r\n            setErrorMessage(\"\");\r\n            // Action based on if remote or local method. Remote needs to pass info to next function so it can be added to firestore.\r\n            if (props.session) {\r\n                props.next(moneyAmount);\r\n            } else {\r\n                props.updateMoneyAmount(moneyAmount);\r\n                props.next();\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId='addMoney'>\r\n                <Form.Label>Cash available to share:</Form.Label>\r\n                <Form.Control\r\n                    size='sm'\r\n                    type='number'\r\n                    value={moneyAmount}\r\n                    onChange={(e) => setMoneyAmount(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n            <div className='mt-4'>\r\n                <ErrorAlertModal errorMessage={errorMessage} />\r\n\r\n                <Button variant='primary' type='submit' size='sm'>\r\n                    <span className='smButtonText'>Next</span>\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stateMoneyAmount: state.distGoodsInfo.moneyAmount,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateMoneyAmount: (moneyAmount) => {\r\n            dispatch({\r\n                type: \"UPDATE_MONEY_TO_SHARE\",\r\n                moneyAmount: moneyAmount,\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputMoneyInfo);\r\n","import React from \"react\";\r\n\r\n// React Components\r\nimport InputMoneyInfo from \"./InputMoneyInfo\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Divorce_GatherMoneyInfoPage = (props) => {\r\n    // Go to add users to group.\r\n    const next = () => {\r\n        props.history.push(\"/Distribute/GroupInfo/Local/Divorce\");\r\n    };\r\n\r\n    //? Maybe have a variable in questions showing if all questions completed.\r\n    if (props.shareMethod) {\r\n        return (\r\n            <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                    <Col\r\n                        xs={10}\r\n                        sm={8}\r\n                        md={6}\r\n                        lg={5}\r\n                        xl={3}\r\n                        className='centerCardCompact m-3'\r\n                        style={{ maxWidth: \"510px\" }}\r\n                    >\r\n                        <InputMoneyInfo next={next} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return <Redirect to='/Distribute/localremote/Divorce' />;\r\n    }\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        shareMethod: state.questionnaireAnswers.shareMethod,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Divorce_GatherMoneyInfoPage);\r\n","import React, { useState } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport ErrorAlertModal from \"../../../Notifications/ErrorAlertModal\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// React Router\r\nimport { withRouter, Redirect, useParams } from \"react-router-dom\";\r\n\r\nconst LocalInputGroupInfoPage = ({\r\n    stateUserArray,\r\n    stateGoodsArr,\r\n    addUser,\r\n    removeUser,\r\n    history,\r\n}) => {\r\n    let { goodType } = useParams();\r\n    // User ID.\r\n    const [username, setUsername] = useState(\"\");\r\n    // Store error message.\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    // Update number of users on submit.\r\n    const addToGroup = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            username &&\r\n            !stateUserArray.some((obj) => obj.username === username)\r\n        ) {\r\n            addUser(username, stateGoodsArr);\r\n            setUsername(\"\");\r\n            setErrorMessage(\"\");\r\n        } else {\r\n            setErrorMessage(\"Error! Invalid username.\");\r\n            setUsername(\"\");\r\n        }\r\n    };\r\n    // Validate group then continue to next page.\r\n    const checkGroup = () => {\r\n        if (stateUserArray.length < 2) {\r\n            setErrorMessage(\"Error! Must have at least 2 users.\");\r\n        } else if (\r\n            // In rent sharing, the number of users and rooms must be equal.\r\n            goodType === \"Rent\" &&\r\n            stateUserArray.length !== stateGoodsArr.length\r\n        ) {\r\n            setErrorMessage(\"Error! Number of rooms and users must be equal.\");\r\n        } else {\r\n            setErrorMessage(\"\");\r\n            history.push(`/Distribute/Valuations/Local/${goodType}`);\r\n        }\r\n    };\r\n\r\n    if (stateGoodsArr.length > 0) {\r\n        return (\r\n            <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                    <Col\r\n                        xs={10}\r\n                        sm={8}\r\n                        md={6}\r\n                        lg={5}\r\n                        xl={3}\r\n                        className='centerCardCompact m-3'\r\n                        style={{ maxWidth: \"650px\" }}\r\n                    >\r\n                        <h5>Enter a user's name to add them to the group.</h5>\r\n                        <div\r\n                            className='mt-4 py-2'\r\n                            style={{\r\n                                borderTop: \"1px solid #999999\",\r\n                                borderBottom: \"1px solid #999999\",\r\n                            }}\r\n                        >\r\n                            <Form onSubmit={addToGroup}>\r\n                                <Row className='align-items-center'>\r\n                                    <Col xs={8} sm={9}>\r\n                                        <Form.Control\r\n                                            size='sm'\r\n                                            placeholder={\"Enter User's name\"}\r\n                                            value={username}\r\n                                            type='text'\r\n                                            onChange={(e) =>\r\n                                                setUsername(e.target.value)\r\n                                            }\r\n                                        />\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3}>\r\n                                        <Button\r\n                                            variant='primary'\r\n                                            size='md'\r\n                                            type='submit'\r\n                                        >\r\n                                            <span>Add</span>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            <Row className='justify-content-center contentOverflow mt-3'>\r\n                                <Col sm='10'>\r\n                                    {stateUserArray.map((user) => (\r\n                                        <Card\r\n                                            style={{\r\n                                                color: \"#000\",\r\n                                                textAlign: \"left\",\r\n                                            }}\r\n                                            key={user.username}\r\n                                            body\r\n                                        >\r\n                                            {user.username}\r\n                                            <button\r\n                                                className='close'\r\n                                                onClick={() =>\r\n                                                    removeUser(user.username)\r\n                                                }\r\n                                            >\r\n                                                ×\r\n                                            </button>\r\n                                        </Card>\r\n                                    ))}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        <div className='mt-4'>\r\n                            <ErrorAlertModal errorMessage={errorMessage} />\r\n                            <Button\r\n                                variant='primary'\r\n                                size='sm'\r\n                                onClick={checkGroup}\r\n                            >\r\n                                <span className='smButtonText'>Next</span>\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return <Redirect to={`/Distribute/localremote/${goodType}`} />;\r\n    }\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stateUserArray: state.distGroupInfo.userArray,\r\n        stateGoodsArr: state.distGoodsInfo.goodsArray,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addUser: (username, goodsArr) => {\r\n            dispatch({\r\n                type: \"ADD_USER\",\r\n                username: username,\r\n                goods: goodsArr,\r\n            });\r\n        },\r\n        removeUser: (username) => {\r\n            dispatch({\r\n                type: \"DELETE_USER\",\r\n                username: username,\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(LocalInputGroupInfoPage)\r\n);\r\n","import React from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// React Router\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\n\r\nconst GoodsQuestionnairePageShell = (props) => {\r\n    // Stage = question.\r\n    let { stage } = useParams();\r\n\r\n    if (props.shareMethod && stage === \"0\") {\r\n        return (\r\n            <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                    <Col\r\n                        xs={10}\r\n                        sm={7}\r\n                        md={5}\r\n                        lg={4}\r\n                        xl={3}\r\n                        className='centerCard m-3'\r\n                        style={{ maxWidth: \"510px\" }}\r\n                    >\r\n                        <h6>\r\n                            Please complete the following short questionnaire.\r\n                            <br />\r\n                            <br />\r\n                            Answers to these questions will determine what\r\n                            qualities the allocation algorithm will have.\r\n                        </h6>\r\n                        <Button\r\n                            variant='primary'\r\n                            size='sm'\r\n                            className='mt-5'\r\n                            onClick={() =>\r\n                                props.history.push(\r\n                                    \"/Distribute/Questions/Local/Goods/1\"\r\n                                )\r\n                            }\r\n                        >\r\n                            <span className='smButtonText'>Begin</span>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else if (props.shareMethod && stage === \"1\") {\r\n        return <Redirect to='/Distribute/GoodInfo/Local/Goods' />;\r\n    } else if (props.shareMethod) {\r\n        return <Redirect to='/Distribute/Questions/Local/Goods/0' />;\r\n    } else {\r\n        return <Redirect to='/Distribute/localremote/Goods' />;\r\n    }\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        shareMethod: state.questionnaireAnswers.shareMethod,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GoodsQuestionnairePageShell);\r\n","import React from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// React Router\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\n\r\nconst RentQuestionnairePageShell = (props) => {\r\n    // Stage = question.\r\n    let { stage } = useParams();\r\n\r\n    console.log(stage);\r\n    if (props.shareMethod && stage === \"0\") {\r\n        return (\r\n            <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                    <Col\r\n                        xs={10}\r\n                        sm={7}\r\n                        md={5}\r\n                        lg={4}\r\n                        xl={3}\r\n                        className='centerCard m-3'\r\n                        style={{ maxWidth: \"510px\" }}\r\n                    >\r\n                        <h6>\r\n                            Please complete the following short questionnaire.\r\n                            <br />\r\n                            <br />\r\n                            Answers to these questions will determine what\r\n                            qualities the allocation algorithm will have.\r\n                        </h6>\r\n                        <Button\r\n                            variant='primary'\r\n                            size='sm'\r\n                            className='mt-5'\r\n                            onClick={() =>\r\n                                props.history.push(\r\n                                    \"/Distribute/Questions/Local/Rent/1\"\r\n                                )\r\n                            }\r\n                        >\r\n                            <span className='smButtonText'>Begin</span>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else if (props.shareMethod && stage === \"1\") {\r\n        return <Redirect to='/Distribute/GoodInfo/Local/Rent' />;\r\n    } else if (props.shareMethod) {\r\n        return <Redirect to='/Distribute/Questions/Local/Rent/0' />;\r\n    } else {\r\n        return <Redirect to='/Distribute/localremote/Rent' />;\r\n    }\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        shareMethod: state.questionnaireAnswers.shareMethod,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RentQuestionnairePageShell);\r\n","import React, { useState } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport ErrorAlertModal from \"../../../Notifications/ErrorAlertModal\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\nconst InputValuationsForGood = (props) => {\r\n    const handleChange = (e) => {\r\n        props.curGood.Value = e.target.value;\r\n\r\n        props.setTotal(\r\n            props.usersGoodsArr.reduce(\r\n                (sum, { Value }) => sum + parseInt(Value),\r\n                0\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Form.Group controlId='valuation' style={{ margin: \"0px\" }}>\r\n            <div>\r\n                <h5 className='lowWeight'>{props.curGood.Good} Value</h5>\r\n            </div>\r\n\r\n            <div>\r\n                <Form.Control\r\n                    type='range'\r\n                    value={props.curGood.Value}\r\n                    min={0}\r\n                    max={props.tValue}\r\n                    step={1}\r\n                    onInput={handleChange}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"90%\", display: \"inline-block\" }}\r\n                />\r\n                <Form.Label style={{ width: \"10%\", margin: \"5 0px\" }}>\r\n                    {props.curGood.Value}\r\n                </Form.Label>\r\n            </div>\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nconst InputValuationsForm = (props) => {\r\n    const [total, setTotal] = useState(0);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    // Update redux valuations store on submit.\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (props.goodType === \"Rent\" && total < props.tValue) {\r\n            setErrorMessage(\r\n                \"Error! Total must be greater or equal to \" + props.tValue\r\n            );\r\n        } else {\r\n            ////console.log(props.usersArr);\r\n            setErrorMessage(\"\");\r\n            setTotal(0);\r\n            props.nextUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} className='mt-5'>\r\n            {props.usersArr[props.currUser].userGoodsArr.map((good) => (\r\n                <InputValuationsForGood\r\n                    key={good.Good}\r\n                    curGood={good}\r\n                    usersGoodsArr={props.usersArr[props.currUser].userGoodsArr}\r\n                    setTotal={setTotal}\r\n                    tValue={props.tValue}\r\n                />\r\n            ))}\r\n\r\n            <div className='mt-3'>\r\n                <h5 className='lowWeight'>Total Value: {total}</h5>\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n                <ErrorAlertModal errorMessage={errorMessage} />\r\n                <Button variant='primary' size='sm' type='submit'>\r\n                    <span className='smButtonText'>\r\n                        {props.currUser >= props.usersArr.length - 1\r\n                            ? \"Finish\"\r\n                            : \"Next User\"}\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\n//* To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tValue: state.distGoodsInfo.totalValue,\r\n        usersArr: state.distGroupInfo.userArray,\r\n        goodType: state.distGoodsInfo.goodType,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateGoodsValuations: (arr) => {\r\n            dispatch({ type: \"UPDATE_VALUATIONS\", updatedArr: arr });\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(InputValuationsForm);\r\n","import React, { useState } from \"react\";\r\n\r\n// React Router\r\nimport { withRouter, Redirect, useParams } from \"react-router-dom\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// React Components\r\nimport InputValuationsForm from \"../InputValuesComponents/InputValuations\";\r\n\r\nconst SetValuationsPage = (props) => {\r\n    let { goodType } = useParams();\r\n    // Valuations.\r\n    const [currUser, setCurrUser] = useState(0);\r\n\r\n    // Goes to get valuations for next user, if they exist.\r\n    const nextUser = () => {\r\n        // Check if next user exists.\r\n        if (currUser < props.usersArr.length - 1) {\r\n            setCurrUser(currUser + 1);\r\n        } else {\r\n            // Dispatch to get results and redirect to results page.\r\n            props.getAllocation();\r\n            props.history.push(`/Distribute/Results/Local/${goodType}`);\r\n        }\r\n    };\r\n\r\n    if (props.usersArr.length > 0) {\r\n        return (\r\n            <Container fluid className='divBlockWithContentTertiary min-vh-100'>\r\n                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                    <Col\r\n                        xs={10}\r\n                        sm={8}\r\n                        md={7}\r\n                        lg={6}\r\n                        className='centerCardCompact m-3'\r\n                        style={{ maxWidth: \"800px\" }}\r\n                    >\r\n                        <h4>\r\n                            {props.usersArr[currUser].username}: Enter your\r\n                            valuation for each item:\r\n                        </h4>\r\n                        <InputValuationsForm\r\n                            currUser={currUser}\r\n                            nextUser={nextUser}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return <Redirect to={`/Distribute/localremote/${goodType}`} />;\r\n    }\r\n};\r\n\r\n//* To modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersArr: state.distGroupInfo.userArray,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllocation: () => {\r\n            dispatch({ type: \"GET_ALLOCATIONS\" });\r\n        },\r\n    };\r\n};\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(SetValuationsPage)\r\n);\r\n","//* API accepts JSON format with a matrix representing each user as a row, and each good as a column. Row, Column = user valuation.\r\n//* Must be a square matrix.\r\n/*\r\ne.g.,\r\n{\r\n    \"valueMatrix\": \r\n    [ \r\n        [500, 100, 700], \r\n        [1000, 200, 800], \r\n        [100, 500, 1000]\r\n    ]\r\n}\r\n//* Returns list of objects - [{who: Row-Of-Value-Matrix, room: Column-Of-Value-Matrix, price: number, }...]\r\n*/\r\nexport const getRentResults = async (valueMatrix, totalCost) => {\r\n    const fetchURL =\r\n        \"https://fair-share-allocation-api.herokuapp.com/api/getRoomsAllocation\";\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Origin: \"http://localhost:3000\",\r\n        },\r\n        body: JSON.stringify({\r\n            valueMatrix: valueMatrix,\r\n            totalCost: totalCost,\r\n        }),\r\n    };\r\n\r\n    const data = await fetch(fetchURL, requestOptions);\r\n    const result = await data.json();\r\n    return result;\r\n};\r\n","//* API accepts JSON format with a matrix representing each user as a row, and each good as a column. Row, Column = user valuation.\r\n/*\r\ne.g.,\r\n{\r\n    \"valueMatrix\": \r\n    [ \r\n        [500, 100, 700, 1], \r\n        [1000, 200, 800, 5], \r\n        [100, 500, 1000, 100]\r\n    ]\r\n}\r\n//* Returns list of objects - [{who: Row-Of-Value-Matrix, goodsArray: [Column-Of-Value-Matrix]}...]\r\n*/\r\nexport const getGoodsResults = async (valueMatrix) => {\r\n    const fetchURL =\r\n        \"https://fair-share-allocation-api.herokuapp.com/api/getGoodsAllocation\";\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Origin: \"http://localhost:3000\",\r\n        },\r\n        body: JSON.stringify({\r\n            valueMatrix: valueMatrix,\r\n        }),\r\n    };\r\n\r\n    const data = await fetch(fetchURL, requestOptions);\r\n    const result = await data.json();\r\n    return result;\r\n};\r\n","//* API accepts JSON format with a matrix representing each user as a row, and each good as a column. Row, Column = user valuation.\r\n/*\r\ne.g.,\r\n{\r\n    \"valueMatrix\": \r\n    [ \r\n        [500, 100, 700, 1], \r\n        [1000, 200, 800, 5], \r\n        [100, 500, 1000, 100]\r\n    ]\r\n}\r\nThe divorce request also needs to pass in the total amount of money there is to share.\r\n//* Returns list of objects - [{who: Row-Of-Value-Matrix, goodsArray: [Column-Of-Value-Matrix], money: Amount}...]\r\n*/\r\nexport const getDivorceResults = async (valueMatrix, moneyAmount) => {\r\n    const fetchURL =\r\n        \"https://fair-share-allocation-api.herokuapp.com/api/getGoodsAndMoneyAllocation\";\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Origin: \"http://localhost:3000\",\r\n        },\r\n        body: JSON.stringify({\r\n            valueMatrix: valueMatrix,\r\n            moneyAmount: moneyAmount,\r\n        }),\r\n    };\r\n\r\n    const data = await fetch(fetchURL, requestOptions);\r\n    const result = await data.json();\r\n    return result;\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport LoadingScreen from \"../../../LoadingScreen/LoadingScreen\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// React Router\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n\r\nimport { getRentResults } from \"../../../../ApiFunctions/getRentResults\";\r\nimport { getGoodsResults } from \"../../../../ApiFunctions/getGoodsResults\";\r\nimport { getDivorceResults } from \"../../../../ApiFunctions/getDivorceResults\";\r\n\r\nconst LocalResultsPage = ({\r\n    userArray,\r\n    stateAllocation,\r\n    setStateAllocation,\r\n    goodsArray,\r\n    totalCost,\r\n    moneyAmount,\r\n}) => {\r\n    let { goodType } = useParams();\r\n    // Get results from API.\r\n    useEffect(() => {\r\n        if (userArray.length > 0 && goodsArray.length > 0) {\r\n            // First convert valuations in user array into a format compatible with API (see value matrix in /ApiFunctions).\r\n            const userCount = userArray.length;\r\n            const goodsCount = userArray[0].userGoodsArr.length;\r\n            var valueMatrix = Array.from(\r\n                Array(userCount),\r\n                () => new Array(goodsCount)\r\n            );\r\n            for (var i = 0; i < userCount; i++) {\r\n                for (var j = 0; j < goodsCount; j++) {\r\n                    valueMatrix[i][j] = userArray[i].userGoodsArr[j].Value;\r\n                }\r\n            }\r\n\r\n            // Goods or Rooms route.\r\n            const allocationsArr = [];\r\n            if (goodType === \"Rent\") {\r\n                getRentResults(valueMatrix, totalCost)\r\n                    .then((allocation) => {\r\n                        allocation.map((user) =>\r\n                            allocationsArr.push({\r\n                                username: userArray[user.who].username,\r\n                                room: user.room,\r\n                                price: user.price,\r\n                            })\r\n                        );\r\n                        setStateAllocation(allocationsArr);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err.message);\r\n                    });\r\n            } else if (goodType === \"Goods\") {\r\n                getGoodsResults(valueMatrix)\r\n                    .then((allocation) => {\r\n                        allocation.map((user) =>\r\n                            allocationsArr.push({\r\n                                username: userArray[user.who].username,\r\n                                alloGoods: user.goodsList,\r\n                            })\r\n                        );\r\n\r\n                        setStateAllocation(allocationsArr);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err.message);\r\n                    });\r\n            } else if (goodType === \"Divorce\") {\r\n                getDivorceResults(valueMatrix, moneyAmount)\r\n                    .then((allocation) => {\r\n                        allocation.map((user) =>\r\n                            allocationsArr.push({\r\n                                username: userArray[user.who].username,\r\n                                alloGoods: user.goodsList,\r\n                                money: user.money,\r\n                            })\r\n                        );\r\n\r\n                        setStateAllocation(allocationsArr);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err.message);\r\n                    });\r\n            }\r\n        }\r\n    }, [\r\n        setStateAllocation,\r\n        userArray,\r\n        goodsArray,\r\n        goodType,\r\n        totalCost,\r\n        moneyAmount,\r\n    ]);\r\n\r\n    if (userArray.length > 0) {\r\n        if (stateAllocation.length > 0) {\r\n            return (\r\n                <Container\r\n                    fluid\r\n                    className='divBlockWithContentTertiary min-vh-100'\r\n                >\r\n                    <Row className='justify-content-center align-items-center min-vh-100'>\r\n                        <Col\r\n                            xs={10}\r\n                            sm={8}\r\n                            md={7}\r\n                            lg={6}\r\n                            className='centerCardCompact m-3'\r\n                            style={{ maxWidth: \"700px\" }}\r\n                        >\r\n                            <h4>Results</h4>\r\n                            <Col sm='12 mt-5'>\r\n                                {stateAllocation.map((allocationObject) => (\r\n                                    <p key={allocationObject.username}>\r\n                                        {allocationObject.username}:&nbsp;\r\n                                        {allocationObject.alloGoods ? (\r\n                                            allocationObject.alloGoods.map(\r\n                                                (goodIndex) => (\r\n                                                    <span\r\n                                                        key={\r\n                                                            goodsArray[\r\n                                                                goodIndex\r\n                                                            ].Good\r\n                                                        }\r\n                                                    >\r\n                                                        {\r\n                                                            goodsArray[\r\n                                                                goodIndex\r\n                                                            ].Good\r\n                                                        }\r\n                                                        ,&nbsp;\r\n                                                    </span>\r\n                                                )\r\n                                            )\r\n                                        ) : (\r\n                                            <span>\r\n                                                {\r\n                                                    goodsArray[\r\n                                                        allocationObject.room\r\n                                                    ].Good\r\n                                                }\r\n                                                &nbsp;at $\r\n                                                {allocationObject.price}\r\n                                                &nbsp;\r\n                                            </span>\r\n                                        )}\r\n                                        {goodType === \"Divorce\" ? (\r\n                                            <span>\r\n                                                + ${allocationObject.money}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </p>\r\n                                ))}\r\n                            </Col>\r\n                            <a href='/' style={{ textDecoration: \"none\" }}>\r\n                                <Button\r\n                                    variant='primary'\r\n                                    size='sm'\r\n                                    className='mt-5'\r\n                                >\r\n                                    <span className='smButtonText'>\r\n                                        Share Again\r\n                                    </span>\r\n                                </Button>\r\n                            </a>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        } else {\r\n            return <LoadingScreen />;\r\n        }\r\n    } else {\r\n        return <Redirect to={`/Distribute/localremote/${goodType}`} />;\r\n    }\r\n};\r\n\r\n// To access and modify redux store.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stateAllocation: state.distGroupInfo.allocations,\r\n        userArray: state.distGroupInfo.userArray,\r\n        goodsArray: state.distGoodsInfo.goodsArray,\r\n        totalCost: state.distGoodsInfo.totalValue,\r\n        moneyAmount: state.distGoodsInfo.moneyAmount,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setStateAllocation: (allocationArr) => {\r\n            dispatch({ type: \"SET_ALLOCATIONS\", allocationArr: allocationArr });\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalResultsPage);\r\n","import React, { useState } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport ErrorAlertModal from \"../../../../../Notifications/ErrorAlertModal\";\r\n\r\nimport { useFirestore } from \"react-redux-firebase\";\r\n\r\nconst RemoteInputGoodsInfo = ({ next, session, sessionID }) => {\r\n    const firestore = useFirestore();\r\n    // Goods Name.\r\n    const [goodName, setGoodName] = useState(\"\");\r\n    const [goodValue, setGoodValue] = useState(\"\");\r\n    // Failed bool used for conditional css.\r\n    //? Maybe turn this into alert.\r\n    // Store error message.\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    // Add 'good' to firestore.\r\n    const addGood = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (goodName === \"\") {\r\n            setErrorMessage(\"Error! Good name cannot be empty.\");\r\n        } else if (goodValue && goodValue < 1) {\r\n            setErrorMessage(\"Error! Good value cannot be less than 1.\");\r\n            setGoodValue(\"\");\r\n        } else {\r\n            // Add if no goods already in firestore array.\r\n            if (!session.goods) {\r\n                let good = {\r\n                    Good: String(goodName),\r\n                    estValue: goodValue,\r\n                    Value: 0,\r\n                };\r\n                var newGoodsArr = [];\r\n                newGoodsArr.push(good);\r\n\r\n                var newGoodsTotalVal;\r\n                if (newGoodsArr.some((good) => good.estValue > 0)) {\r\n                    newGoodsTotalVal = newGoodsArr.reduce(\r\n                        (t, good) => t + parseInt(good.estValue),\r\n                        0\r\n                    );\r\n                    newGoodsTotalVal =\r\n                        newGoodsTotalVal < 1000 ? 1000 : newGoodsTotalVal;\r\n                } else {\r\n                    newGoodsTotalVal = 1000;\r\n                }\r\n\r\n                firestore\r\n                    .update(\r\n                        { collection: \"ShareSessions\", doc: sessionID },\r\n                        { goods: newGoodsArr, totalCost: newGoodsTotalVal }\r\n                    )\r\n                    .then(() => {\r\n                        console.log(session);\r\n\r\n                        setGoodName(\"\");\r\n                        setGoodValue(\"\");\r\n                        setErrorMessage(\"\");\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err.message);\r\n\r\n                        setGoodName(\"\");\r\n                        setGoodValue(\"\");\r\n                        setErrorMessage(\"\");\r\n                    });\r\n            } else if (\r\n                session.goods.filter((good) => good.Good === goodName).length >\r\n                0\r\n            ) {\r\n                // Check if good name is unique.\r\n                setErrorMessage(\"Error! Good with name already exists.\");\r\n                setGoodName(\"\");\r\n            } else {\r\n                let good = {\r\n                    Good: String(goodName),\r\n                    estValue: goodValue,\r\n                    Value: 0,\r\n                };\r\n                var goodsArr = [...session.goods];\r\n                goodsArr.push(good);\r\n\r\n                var goodsTotalVal;\r\n                if (goodsArr.some((good) => good.estValue > 0)) {\r\n                    goodsTotalVal = goodsArr.reduce(\r\n                        (t, good) => t + parseInt(good.estValue),\r\n                        0\r\n                    );\r\n                    goodsTotalVal = goodsTotalVal < 1000 ? 1000 : goodsTotalVal;\r\n                } else {\r\n                    goodsTotalVal = 1000;\r\n                }\r\n                // State\r\n                firestore\r\n                    .update(\r\n                        { collection: \"ShareSessions\", doc: sessionID },\r\n                        { goods: goodsArr, totalCost: goodsTotalVal }\r\n                    )\r\n                    .then(() => {\r\n                        console.log(session);\r\n\r\n                        setGoodName(\"\");\r\n                        setGoodValue(\"\");\r\n                        setErrorMessage(\"\");\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err.message);\r\n\r\n                        setGoodName(\"\");\r\n                        setGoodValue(\"\");\r\n                        setErrorMessage(\"\");\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteGood = (goodName) => {\r\n        // Return group without user with userEmail.\r\n        const newGoodsArr = [...session.goods].filter((good) => {\r\n            return good.Good !== goodName;\r\n        });\r\n        firestore\r\n            .update(\r\n                { collection: \"ShareSessions\", doc: sessionID },\r\n                { goods: newGoodsArr }\r\n            )\r\n            .then(() => {\r\n                console.log(\"Good Successfully Deleted.\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            });\r\n    };\r\n    // Next state.\r\n    const nextPage = () => {\r\n        if (session.goods && session.goods.length > 0) {\r\n            setErrorMessage(\"\");\r\n            next();\r\n        } else {\r\n            setErrorMessage(\"Error! Must have at least 1 item.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h5>Enter a item's name and price.</h5>\r\n            <div\r\n                className='mt-4 py-2'\r\n                style={{\r\n                    borderTop: \"1px solid #999999\",\r\n                    borderBottom: \"1px solid #999999\",\r\n                }}\r\n            >\r\n                <Form onSubmit={addGood}>\r\n                    <Row className='align-items-center'>\r\n                        <Col xs={12} sm={9}>\r\n                            <Form.Control\r\n                                size='sm'\r\n                                placeholder='Name'\r\n                                value={goodName}\r\n                                type='text'\r\n                                onChange={(e) => setGoodName(e.target.value)}\r\n                                style={{\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    display: \"inline\",\r\n                                }}\r\n                            />\r\n                            <Form.Control\r\n                                size='sm'\r\n                                placeholder='Estimated Value (Optional)'\r\n                                value={goodValue}\r\n                                type='number'\r\n                                onChange={(e) => setGoodValue(e.target.value)}\r\n                                style={{\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    display: \"inline\",\r\n                                }}\r\n                                className='mt-1'\r\n                            />\r\n                        </Col>\r\n                        <Col xs={12} sm={3}>\r\n                            <Button\r\n                                variant='primary'\r\n                                size='md'\r\n                                className='m-3'\r\n                                type='submit'\r\n                            >\r\n                                <span>Add</span>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                <hr />\r\n                <Row className='justify-content-center contentOverflow mt-3'>\r\n                    <Col sm='10'>\r\n                        {session.goods\r\n                            ? session.goods.map((good) => (\r\n                                  <Card\r\n                                      style={{ color: \"#000\" }}\r\n                                      key={good.Good}\r\n                                      body\r\n                                  >\r\n                                      {good.Good} | {good.estValue}\r\n                                      <button\r\n                                          className='close'\r\n                                          onClick={() => deleteGood(good.Good)}\r\n                                      >\r\n                                          ×\r\n                                      </button>\r\n                                  </Card>\r\n                              ))\r\n                            : \"\"}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n                <ErrorAlertModal errorMessage={errorMessage} />\r\n\r\n                <Button variant='primary' size='sm' onClick={nextPage}>\r\n                    <span className='smButtonText'>Next</span>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RemoteInputGoodsInfo;\r\n","import React from \"react\";\r\n\r\n// React Components\r\nimport RemoteInputGoodsInfo from \"./InputForms/RemoteInputGoodsInfo\";\r\nimport InputRoomsInfo from \"../../../Local/Rent/InputRoomsInfo\";\r\nimport LoadingScreen from \"../../../../LoadingScreen/LoadingScreen\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport {\r\n    useFirestoreConnect,\r\n    isLoaded,\r\n    useFirestore,\r\n} from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n\r\nconst RemoteGatherGoodsPage = (props) => {\r\n    const firestore = useFirestore();\r\n    useFirestoreConnect([\r\n        { collection: \"ShareSessions\", doc: props.match.params.sessionID },\r\n    ]);\r\n    const session = useSelector(\r\n        ({ firestore: { data } }) =>\r\n            data.ShareSessions &&\r\n            data.ShareSessions[props.match.params.sessionID]\r\n    );\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n    let { sessionID } = useParams();\r\n\r\n    // Continue to input group info or in the case of divorce type, money info.\r\n    const nextG = () => {\r\n        if (session.type === \"Divorce\") {\r\n            props.history.push(`/Distribute/GoodInfo/Remote/${sessionID}/2`);\r\n        } else {\r\n            props.history.push(`/Distribute/GroupInfo/Remote/${sessionID}`);\r\n        }\r\n    };\r\n\r\n    // In case of rent process, goods needs to be added into firestore.\r\n    const nextR = (roomCount, totalCost) => {\r\n        var goods = [];\r\n        for (var i = 0; i < roomCount; i++) {\r\n            var room = { Good: \"Room \" + (parseInt(i) + 1), Value: 0 };\r\n            goods.push(room);\r\n        }\r\n\r\n        if (totalCost > 0 && roomCount > 0) {\r\n            firestore\r\n                .update(\r\n                    { collection: \"ShareSessions\", doc: sessionID },\r\n                    { totalCost: parseInt(totalCost), goods: goods }\r\n                )\r\n                .then(() => {\r\n                    console.log(session);\r\n                    props.history.push(\r\n                        `/Distribute/GroupInfo/Remote/${sessionID}`\r\n                    );\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    // Wait for load.\r\n    if (isLoaded(session) && auth.isLoaded) {\r\n        // Must be logged in.\r\n        if (!auth.isEmpty) {\r\n            // Session must exist and be active. Only the owner can be on the page.\r\n            if (session && session.active && session.owner === auth.uid) {\r\n                // Render based on which good type.\r\n                switch (session.type) {\r\n                    // Both divorce and goods cases return the RemoteInputGoodsInfo component.\r\n                    case \"Goods\":\r\n                    case \"Divorce\":\r\n                        return (\r\n                            <Container\r\n                                fluid\r\n                                className='divBlockWithContentTertiary min-vh-100'\r\n                            >\r\n                                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                                    <Col\r\n                                        xs={10}\r\n                                        sm={8}\r\n                                        md={6}\r\n                                        lg={5}\r\n                                        xl={3}\r\n                                        className='centerCardCompact m-3'\r\n                                        style={{ maxWidth: \"510px\" }}\r\n                                    >\r\n                                        <RemoteInputGoodsInfo\r\n                                            next={nextG}\r\n                                            session={session}\r\n                                            sessionID={sessionID}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        );\r\n                    case \"Rent\":\r\n                        return (\r\n                            <Container\r\n                                fluid\r\n                                className='divBlockWithContentTertiary min-vh-100'\r\n                            >\r\n                                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                                    <Col\r\n                                        xs={10}\r\n                                        sm={8}\r\n                                        md={6}\r\n                                        lg={5}\r\n                                        xl={3}\r\n                                        className='centerCardCompact m-3'\r\n                                        style={{ maxWidth: \"510px\" }}\r\n                                    >\r\n                                        <InputRoomsInfo\r\n                                            next={nextR}\r\n                                            session={session}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        );\r\n                    default:\r\n                        return <Redirect to='/' />;\r\n                }\r\n            } else {\r\n                return <Redirect to='/' />;\r\n            }\r\n        } else {\r\n            return <Redirect to='/Login' />;\r\n        }\r\n    } else {\r\n        // Loading.\r\n        return <LoadingScreen />;\r\n    }\r\n};\r\nexport default RemoteGatherGoodsPage;\r\n","import React from \"react\";\r\n\r\n// React Components\r\nimport InputMoneyInfo from \"../../../Local/Divorce/InputMoneyInfo\";\r\nimport LoadingScreen from \"../../../../LoadingScreen/LoadingScreen\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport {\r\n    useFirestoreConnect,\r\n    isLoaded,\r\n    useFirestore,\r\n} from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n\r\nconst RemoteDivorce_GatherMoneyInfoPage = (props) => {\r\n    const firestore = useFirestore();\r\n    useFirestoreConnect([\r\n        { collection: \"ShareSessions\", doc: props.match.params.sessionID },\r\n    ]);\r\n    const session = useSelector(\r\n        ({ firestore: { data } }) =>\r\n            data.ShareSessions &&\r\n            data.ShareSessions[props.match.params.sessionID]\r\n    );\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n    let { sessionID } = useParams();\r\n\r\n    const next = (moneyAmount) => {\r\n        if (moneyAmount >= 0) {\r\n            firestore\r\n                .update(\r\n                    { collection: \"ShareSessions\", doc: sessionID },\r\n                    { moneyAmount: parseInt(moneyAmount) }\r\n                )\r\n                .then(() => {\r\n                    props.history.push(\r\n                        `/Distribute/GroupInfo/Remote/${sessionID}`\r\n                    );\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    if (isLoaded(session) && auth.isLoaded) {\r\n        if (!auth.isEmpty) {\r\n            if (session && session.active && session.owner === auth.uid) {\r\n                return (\r\n                    <Container\r\n                        fluid\r\n                        className='divBlockWithContentTertiary min-vh-100'\r\n                    >\r\n                        <Row className='justify-content-center align-items-center min-vh-100'>\r\n                            <Col\r\n                                xs={10}\r\n                                sm={8}\r\n                                md={6}\r\n                                lg={5}\r\n                                xl={3}\r\n                                className='centerCardCompact m-3'\r\n                                style={{ maxWidth: \"510px\" }}\r\n                            >\r\n                                <InputMoneyInfo next={next} session={session} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                );\r\n            } else {\r\n                return <Redirect to='/Distribute/localremote/Divorce' />;\r\n            }\r\n        } else {\r\n            return <Redirect to='/Login' />;\r\n        }\r\n    } else {\r\n        return <LoadingScreen />;\r\n    }\r\n};\r\n\r\nexport default RemoteDivorce_GatherMoneyInfoPage;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport ErrorAlertModal from \"../../../../Notifications/ErrorAlertModal\";\r\nimport LoadingScreen from \"../../../../LoadingScreen/LoadingScreen\";\r\n\r\nimport {\r\n    useFirestoreConnect,\r\n    isLoaded,\r\n    useFirestore,\r\n} from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// React Router firebaseUsers: state.firestore.ordered.users\r\nimport { withRouter, Redirect, useParams } from \"react-router-dom\";\r\n\r\nconst RemoteInputGroupInfoPage = (props) => {\r\n    const firestore = useFirestore();\r\n    useFirestoreConnect([\r\n        { collection: \"ShareSessions\", doc: props.match.params.sessionID },\r\n        { collection: \"users\" },\r\n        { collection: \"SessionInvitations\" },\r\n    ]);\r\n\r\n    // Form user email.\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n    // Is the user on this page in the session group?\r\n    const [thisUserInvited, setThisUserInvited] = useState(true);\r\n    const [userAllowedDetermined, setUserAllowedDetermined] = useState(false);\r\n    // When invitation sent.\r\n    const [inviteSent, setInviteSent] = useState(false);\r\n    // Store error message.\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const session = useSelector(\r\n        ({ firestore: { data } }) =>\r\n            data.ShareSessions &&\r\n            data.ShareSessions[props.match.params.sessionID]\r\n    );\r\n    const firebaseUsers = useSelector((state) => state.firestore.ordered.users);\r\n    const invitations = useSelector(\r\n        (state) => state.firestore.ordered.SessionInvitations\r\n    );\r\n    const profile = useSelector((state) => state.firebase.profile);\r\n    const uid = useSelector((state) => state.firebase.auth.uid);\r\n\r\n    // To avoid many calls.\r\n    const isSessionLoaded = isLoaded(session);\r\n    const isUsersLoaded = isLoaded(firebaseUsers);\r\n\r\n    // For routing to next section.\r\n    let { sessionID } = useParams();\r\n\r\n    //* Add the user who is on the page on page load if they are in 'invitedUsers' collection or owner.\r\n    //? Maybe user gets added to the group when they click 'accept' on the push notification?\r\n    useEffect(() => {\r\n        if (!userAllowedDetermined) {\r\n            if (profile.isLoaded && isUsersLoaded && isSessionLoaded) {\r\n                if (session && session.active) {\r\n                    if (session.owner === uid) {\r\n                        // Add owner if they are not yet in the group.\r\n                        // Group doesn't exist if owner isn't in the group yet.\r\n                        if (!session.group) {\r\n                            const group = [];\r\n                            group.push({\r\n                                userEmail: profile.email,\r\n                                username: profile.username,\r\n                            });\r\n\r\n                            firestore\r\n                                .update(\r\n                                    {\r\n                                        collection: \"ShareSessions\",\r\n                                        doc: sessionID,\r\n                                    },\r\n                                    { group: group }\r\n                                )\r\n                                .then(() => {\r\n                                    console.log(\"Success\");\r\n                                    setUserAllowedDetermined(true);\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.log(err.message);\r\n                                });\r\n                        } else {\r\n                            setUserAllowedDetermined(true);\r\n                        }\r\n                    } else if (session.invitedUsers.length > 0) {\r\n                        if (\r\n                            session.invitedUsers.some(\r\n                                (email) => email === profile.email\r\n                            )\r\n                        ) {\r\n                            // User is invited, proceed to add to group.\r\n                            const group = [...session.group];\r\n                            // Make sure this user isn't already in the group.\r\n                            if (\r\n                                !group.some(\r\n                                    (obj) => obj.userEmail === profile.email\r\n                                )\r\n                            ) {\r\n                                console.log(\"Adding User\");\r\n                                group.push({\r\n                                    userEmail: profile.email,\r\n                                    username: profile.username,\r\n                                });\r\n                                // Updates firestore.\r\n                                firestore\r\n                                    .update(\r\n                                        {\r\n                                            collection: \"ShareSessions\",\r\n                                            doc: sessionID,\r\n                                        },\r\n                                        { group: group }\r\n                                    )\r\n                                    .then(() => {\r\n                                        console.log(\"Success\");\r\n                                        setUserAllowedDetermined(true);\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        console.log(err.message);\r\n                                    });\r\n                            } else {\r\n                                setUserAllowedDetermined(true);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // No one is invited, don't check if user exist in invited users array.\r\n                        setUserAllowedDetermined(true);\r\n                    }\r\n                } else {\r\n                    setUserAllowedDetermined(true);\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        profile,\r\n        isSessionLoaded,\r\n        isUsersLoaded,\r\n        userAllowedDetermined,\r\n        thisUserInvited,\r\n        sessionID,\r\n        session,\r\n        uid,\r\n        firestore,\r\n    ]);\r\n\r\n    //* Check if user is invited.\r\n    useEffect(() => {\r\n        if (profile.isLoaded && isSessionLoaded) {\r\n            if (session && session.owner !== uid) {\r\n                console.log(\"Checking Invitation\");\r\n                console.log(session.invitedUsers);\r\n                if (session.invitedUsers.length > 0) {\r\n                    if (\r\n                        session.invitedUsers.some(\r\n                            (email) => email === profile.email\r\n                        )\r\n                    ) {\r\n                        // User is invited.\r\n                        setThisUserInvited(true);\r\n                    } else {\r\n                        setThisUserInvited(false);\r\n                    }\r\n                } else {\r\n                    // No one is invited, don't check if user exist in invited users array.\r\n                    setThisUserInvited(false);\r\n                }\r\n            }\r\n        }\r\n    }, [session, isSessionLoaded, profile, uid]);\r\n\r\n    // Invite, i.e., add to 'invitedUsers'. Users who are on this session's page must be in invited users array.\r\n    const inviteToGroup = async (e) => {\r\n        e.preventDefault();\r\n        // Find user in 'users' collection.\r\n        const user = firebaseUsers.filter((user) => user.email === userEmail);\r\n        console.log(profile.email);\r\n        console.log(user.email);\r\n        console.log(userEmail);\r\n        // Make sure user is not self and user exists.\r\n        if (profile.email !== userEmail && user.length > 0) {\r\n            const invitedUsers = session.invitedUsers\r\n                ? [...session.invitedUsers]\r\n                : [];\r\n            // Make sure user isn't already invited.\r\n            if (invitedUsers.some((email) => email === userEmail)) {\r\n                setErrorMessage(\"Error! Invalid username.\");\r\n                setInviteSent(false);\r\n                setUserEmail(\"\");\r\n            } else {\r\n                invitedUsers.push(userEmail);\r\n                // First add to SessionInvitations collection. This allows user to get a notification.\r\n                const inviteInfo = {\r\n                    active: true,\r\n                    ownerUsername: profile.username,\r\n                    type: session.type,\r\n                };\r\n                const userCurInvitations = invitations.find(\r\n                    (element) => element.id === userEmail\r\n                )\r\n                    ? JSON.parse(\r\n                          JSON.stringify(\r\n                              invitations.find(\r\n                                  (element) => element.id === userEmail\r\n                              ).invites\r\n                          )\r\n                      )\r\n                    : {};\r\n                //console.log(userCurInvitations);\r\n                userCurInvitations[sessionID] = inviteInfo;\r\n\r\n                firestore\r\n                    .set(\r\n                        {\r\n                            collection: \"SessionInvitations\",\r\n                            doc: userEmail,\r\n                        },\r\n                        {\r\n                            invites: userCurInvitations,\r\n                        }\r\n                    )\r\n                    .then(() => {\r\n                        firestore\r\n                            .update(\r\n                                { collection: \"ShareSessions\", doc: sessionID },\r\n                                { invitedUsers: invitedUsers }\r\n                            )\r\n                            .then(() => {\r\n                                setInviteSent(true);\r\n                                setUserEmail(\"\");\r\n                                setErrorMessage(\"\");\r\n                            })\r\n                            .catch((err) => console.log(err.message));\r\n                    })\r\n                    .catch((err) => console.log(err.message));\r\n            }\r\n        } else {\r\n            setErrorMessage(\"Error! Invalid user.\");\r\n            setInviteSent(false);\r\n        }\r\n    };\r\n    // Validate group size then continue to next page.\r\n    //? Maybe make user able to go to next page if owner clicks next. Prevents users staying in valuations page while getting removed form group.\r\n    const checkGroup = () => {\r\n        if (session.group.length < 2) {\r\n            setErrorMessage(\"Error! Must have at least 2 users.\");\r\n            setInviteSent(false);\r\n        } else if (\r\n            // In rent sharing, the number of users and rooms must be equal.\r\n            session.type === \"Rent\" &&\r\n            session.group.length !== session.goods.length\r\n        ) {\r\n            setErrorMessage(\"Error! Number of rooms and users must be equal.\");\r\n            setInviteSent(false);\r\n        } else {\r\n            setErrorMessage(\"\");\r\n            props.history.push(`/Distribute/Valuations/Remote/${sessionID}`);\r\n        }\r\n    };\r\n    const deleteUser = (userEmail) => {\r\n        if (session.owner === uid) {\r\n            if (userEmail !== profile.email) {\r\n                // Return group without user with userEmail.\r\n                const newGroup = [...session.group].filter((user) => {\r\n                    return user.userEmail !== userEmail;\r\n                });\r\n                // Also update 'invitedUsers'\r\n                const newInvitedUsers = [...session.invitedUsers].filter(\r\n                    (email) => {\r\n                        return email !== userEmail;\r\n                    }\r\n                );\r\n                firestore\r\n                    .update(\r\n                        { collection: \"ShareSessions\", doc: sessionID },\r\n                        { group: newGroup, invitedUsers: newInvitedUsers }\r\n                    )\r\n                    .then(() => {\r\n                        console.log(\"User Successfully Deleted.\");\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err.message);\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    // Wait for load.\r\n    if (isSessionLoaded && profile.isLoaded && userAllowedDetermined) {\r\n        if (!profile.isEmpty) {\r\n            // Session must exist and be active. User must be the session owner or invited.\r\n            if (\r\n                session &&\r\n                session.active &&\r\n                (thisUserInvited || session.owner === uid)\r\n            ) {\r\n                //? Maybe seperate into smaller components?\r\n                return (\r\n                    <Container\r\n                        fluid\r\n                        className='divBlockWithContentTertiary min-vh-100'\r\n                    >\r\n                        <Row className='justify-content-center align-items-center min-vh-100'>\r\n                            <Col\r\n                                xs={10}\r\n                                sm={8}\r\n                                md={6}\r\n                                lg={5}\r\n                                xl={3}\r\n                                className='centerCardCompact m-3'\r\n                                style={{ maxWidth: \"650px\" }}\r\n                            >\r\n                                {session.owner === uid ? (\r\n                                    <h5>\r\n                                        Enter a user email to add them to the\r\n                                        group.\r\n                                    </h5>\r\n                                ) : (\r\n                                    <h5>Current Group</h5>\r\n                                )}\r\n                                <div\r\n                                    className='mt-4 py-2'\r\n                                    style={{\r\n                                        borderTop: \"1px solid #999999\",\r\n                                        borderBottom: \"1px solid #999999\",\r\n                                    }}\r\n                                >\r\n                                    {session.owner === uid ? (\r\n                                        <Form onSubmit={inviteToGroup}>\r\n                                            <Row className='align-items-center'>\r\n                                                <Col xs={8} sm={9}>\r\n                                                    <Form.Control\r\n                                                        size='sm'\r\n                                                        placeholder={\r\n                                                            \"Enter User email\"\r\n                                                        }\r\n                                                        value={userEmail}\r\n                                                        type='email'\r\n                                                        onChange={(e) =>\r\n                                                            setUserEmail(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col xs={4} sm={3}>\r\n                                                    <Button\r\n                                                        variant='primary'\r\n                                                        size='md'\r\n                                                        type='submit'\r\n                                                    >\r\n                                                        <span>Add</span>\r\n                                                    </Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form>\r\n                                    ) : null}\r\n                                    <Row className='justify-content-center contentOverflow mt-3'>\r\n                                        <Col sm='10'>\r\n                                            {/* The following displays a card for each user with a delete button if user is not owner. */}\r\n                                            {session.group\r\n                                                ? session.group.map((user) => (\r\n                                                      <Card\r\n                                                          style={{\r\n                                                              color: \"#000\",\r\n                                                              textAlign: \"left\",\r\n                                                          }}\r\n                                                          key={user.userEmail}\r\n                                                          body\r\n                                                      >\r\n                                                          {user.username}\r\n                                                          {user.userEmail !==\r\n                                                              profile.email &&\r\n                                                          session.owner ===\r\n                                                              uid ? (\r\n                                                              <button\r\n                                                                  className='close'\r\n                                                                  onClick={() =>\r\n                                                                      deleteUser(\r\n                                                                          user.userEmail\r\n                                                                      )\r\n                                                                  }\r\n                                                              >\r\n                                                                  ×\r\n                                                              </button>\r\n                                                          ) : (\r\n                                                              <button className='close'></button>\r\n                                                          )}\r\n                                                      </Card>\r\n                                                  ))\r\n                                                : null}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <div className='mt-4'>\r\n                                    <ErrorAlertModal\r\n                                        errorMessage={errorMessage}\r\n                                    />\r\n                                    {inviteSent ? (\r\n                                        <Alert variant={\"success\"}>\r\n                                            Invitation Sent\r\n                                        </Alert>\r\n                                    ) : null}\r\n                                    <Button\r\n                                        variant='primary'\r\n                                        size='sm'\r\n                                        onClick={checkGroup}\r\n                                    >\r\n                                        <span className='smButtonText'>\r\n                                            Next\r\n                                        </span>\r\n                                    </Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                );\r\n            } else {\r\n                return <Redirect to={`/`} />;\r\n            }\r\n        } else {\r\n            return <Redirect to='/Login' />;\r\n        }\r\n    } else {\r\n        return <LoadingScreen />;\r\n    }\r\n};\r\n\r\nexport default withRouter(RemoteInputGroupInfoPage);\r\n","import React, { useState } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport ErrorAlertModal from \"../../../Notifications/ErrorAlertModal\";\r\n\r\nconst InputValuationsForGood = ({ good, changeGoodValue, totalCost }) => {\r\n    const handleChange = (e) => {\r\n        changeGoodValue(good, parseInt(e.target.value));\r\n    };\r\n\r\n    return (\r\n        <Form.Group controlId='valuation' style={{ margin: \"0px\" }}>\r\n            <div>\r\n                <h5 className='lowWeight'>{good.Good} Value</h5>\r\n            </div>\r\n\r\n            <div>\r\n                <Form.Control\r\n                    type='range'\r\n                    value={good.Value}\r\n                    min={0}\r\n                    max={totalCost}\r\n                    step={1}\r\n                    onInput={handleChange}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"90%\", display: \"inline-block\" }}\r\n                />\r\n                <Form.Label style={{ width: \"10%\", margin: \"5 0px\" }}>\r\n                    {good.Value}\r\n                </Form.Label>\r\n            </div>\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nconst RemoteInputValuations = (props) => {\r\n    const [total, setTotal] = useState(0);\r\n    const [userGoodsArr, setUserGoodsArr] = useState(props.goods);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (props.goodType === \"Rent\" && total < props.totalCost) {\r\n            setErrorMessage(\r\n                \"Error! Total must be greater or equal to \" + props.totalCost\r\n            );\r\n        } else {\r\n            props.storeValuations(userGoodsArr, total);\r\n        }\r\n    };\r\n\r\n    // Sets value of the specific good in userGoodsArr to new value.\r\n    const changeGoodValue = (good, newValue) => {\r\n        const newUserGoodsArr = [...userGoodsArr].map((object) => {\r\n            if (object.Good === good.Good) {\r\n                return {\r\n                    ...object,\r\n                    Value: newValue,\r\n                };\r\n            } else return object;\r\n        });\r\n\r\n        setUserGoodsArr(newUserGoodsArr);\r\n\r\n        setTotal(\r\n            newUserGoodsArr.reduce((sum, { Value }) => sum + parseInt(Value), 0)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} className='mt-5'>\r\n            {userGoodsArr.map((good) => (\r\n                <InputValuationsForGood\r\n                    key={good.Good}\r\n                    good={good}\r\n                    userGoodsArr={userGoodsArr}\r\n                    changeGoodValue={changeGoodValue}\r\n                    totalCost={props.totalCost}\r\n                />\r\n            ))}\r\n\r\n            <div className='mt-3'>\r\n                <h5 className='lowWeight'>Total Value: {total}</h5>\r\n            </div>\r\n            <div className='mt-5'>\r\n                <ErrorAlertModal errorMessage={errorMessage} />\r\n                <Button variant='primary' size='sm' type='submit'>\r\n                    <span className='smButtonText'>Finish</span>\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default RemoteInputValuations;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// React Router\r\nimport { withRouter, Redirect, useParams } from \"react-router-dom\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport LoadingScreen from \"../../../LoadingScreen/LoadingScreen\";\r\n\r\nimport {\r\n    useFirestoreConnect,\r\n    isLoaded,\r\n    useFirestore,\r\n} from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// React Components\r\nimport RemoteInputValuations from \"./RemoteInputValuations\";\r\n\r\nconst Remote_SetValuationsPage = (props) => {\r\n    // True if user in session group.\r\n    const [userInSession, setUserInSession] = useState(false);\r\n    const [userInSessionDetermined, setUserInSessionDetermined] = useState();\r\n    // For rendering 'waiting' page.\r\n    const [editValues, setEditValues] = useState(false);\r\n\r\n    const firestore = useFirestore();\r\n    useFirestoreConnect([\r\n        { collection: \"ShareSessions\", doc: props.match.params.sessionID },\r\n    ]);\r\n    const session = useSelector(\r\n        ({ firestore: { data } }) =>\r\n            data.ShareSessions &&\r\n            data.ShareSessions[props.match.params.sessionID]\r\n    );\r\n    const profile = useSelector((state) => state.firebase.profile);\r\n    const uid = useSelector((state) => state.firebase.auth.uid);\r\n    const isSessionLoaded = isLoaded(session);\r\n\r\n    let { sessionID } = useParams();\r\n\r\n    // Determine the value of userInSession variable.\r\n    useEffect(() => {\r\n        if (isSessionLoaded && profile.isLoaded && !userInSessionDetermined) {\r\n            if (session && !profile.isEmpty) {\r\n                if (\r\n                    session.group.some(\r\n                        (user) =>\r\n                            user.userEmail === profile.email &&\r\n                            user.username === profile.username\r\n                    )\r\n                ) {\r\n                    setUserInSession(true);\r\n                    setUserInSessionDetermined(true);\r\n                } else {\r\n                    setUserInSession(false);\r\n                    setUserInSessionDetermined(true);\r\n                }\r\n            } else {\r\n                setUserInSession(false);\r\n                setUserInSessionDetermined(true);\r\n            }\r\n        }\r\n    }, [\r\n        isSessionLoaded,\r\n        profile,\r\n        session,\r\n        userInSession,\r\n        setUserInSession,\r\n        userInSessionDetermined,\r\n        setUserInSessionDetermined,\r\n    ]);\r\n\r\n    // Create {userEmail?, username, userGoodsArr} and add to firestore valuations array.\r\n    const storeValuations = (userGoodsArray, total) => {\r\n        // Algorithms expect valuations total value > total cost.\r\n        const values = session.values\r\n            ? JSON.parse(JSON.stringify(session.values))\r\n            : {};\r\n        const userValues = {\r\n            username: profile.username,\r\n            email: profile.email,\r\n            goods: userGoodsArray,\r\n        };\r\n        // Add or replace for each good.\r\n        /*\r\n            userGoodsArray.forEach((good) => {\r\n                userValues[good.Good] = parseInt(good.Value);\r\n            });\r\n            */\r\n        values[uid] = userValues;\r\n\r\n        firestore\r\n            .update(\r\n                { collection: \"ShareSessions\", doc: sessionID },\r\n                { values: values }\r\n            )\r\n            .then(() => {\r\n                console.log(\"Successfully added your values\");\r\n\r\n                setEditValues(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            });\r\n    };\r\n\r\n    // Wait for load.\r\n    if (isSessionLoaded && profile.isLoaded && userInSessionDetermined) {\r\n        // Must be logged in.\r\n        if (!profile.isEmpty) {\r\n            // Session must exist and be active, and userInSession must be true.\r\n            if (session && session.active && userInSession) {\r\n                // If user has submitted their values.\r\n                if (session.values && session.values[uid] && !editValues) {\r\n                    // If everyone is finished.\r\n                    if (\r\n                        Object.keys(session.values).length ===\r\n                        session.group.length\r\n                    ) {\r\n                        return (\r\n                            <Redirect\r\n                                to={`/Distribute/Results/Remote/${sessionID}`}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <Container\r\n                                fluid\r\n                                className='divBlockWithContentTertiary min-vh-100'\r\n                            >\r\n                                <Row className='justify-content-center align-items-center min-vh-100'>\r\n                                    <Col\r\n                                        xs={10}\r\n                                        sm={8}\r\n                                        md={7}\r\n                                        lg={6}\r\n                                        className='centerCardCompact m-3'\r\n                                        style={{ maxWidth: \"800px\" }}\r\n                                    >\r\n                                        <h4>\r\n                                            Waiting for other players to submit\r\n                                            their valuations.\r\n                                        </h4>\r\n                                        {/*  \r\n                                        //! Not shown if someone is editing. User could be redirected while editing.\r\n                                        //TODO Add the following when fixed.\r\n                                        <Button\r\n                                            variant='primary'\r\n                                            size='md'\r\n                                            onClick={() => setEditValues(true)}\r\n                                        >\r\n                                            <span>Edit</span>\r\n                                        </Button>\r\n                                        */}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        );\r\n                    }\r\n                } else\r\n                    return (\r\n                        <Container\r\n                            fluid\r\n                            className='divBlockWithContentTertiary min-vh-100'\r\n                        >\r\n                            <Row className='justify-content-center align-items-center min-vh-100'>\r\n                                <Col\r\n                                    xs={10}\r\n                                    sm={8}\r\n                                    md={7}\r\n                                    lg={6}\r\n                                    className='centerCardCompact m-3'\r\n                                    style={{ maxWidth: \"800px\" }}\r\n                                >\r\n                                    <h4>\r\n                                        {profile.username}: Enter your valuation\r\n                                        for each item:\r\n                                    </h4>\r\n                                    <RemoteInputValuations\r\n                                        goods={\r\n                                            session.values &&\r\n                                            session.values[uid]\r\n                                                ? [...session.values[uid].goods]\r\n                                                : session.goods\r\n                                        }\r\n                                        totalCost={session.totalCost}\r\n                                        storeValuations={storeValuations}\r\n                                        goodType={session.type}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    );\r\n            } else {\r\n                return <Redirect to={`/`} />;\r\n            }\r\n        } else {\r\n            return <Redirect to='/Login' />;\r\n        }\r\n    } else {\r\n        return <LoadingScreen />;\r\n    }\r\n};\r\n\r\nexport default withRouter(Remote_SetValuationsPage);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n// Bootstrap Components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport LoadingScreen from \"../../../LoadingScreen/LoadingScreen\";\r\n\r\nimport {\r\n    useFirestoreConnect,\r\n    isLoaded,\r\n    useFirestore,\r\n} from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// React Router\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n\r\nimport { getRentResults } from \"../../../../ApiFunctions/getRentResults\";\r\nimport { getGoodsResults } from \"../../../../ApiFunctions/getGoodsResults\";\r\nimport { getDivorceResults } from \"../../../../ApiFunctions/getDivorceResults\";\r\n\r\nconst RemoteResultsPage = (props) => {\r\n    // True if user in session group.\r\n    const [userInSession, setUserInSession] = useState(false);\r\n    const [userInSessionDetermined, setUserInSessionDetermined] = useState();\r\n\r\n    const firestore = useFirestore();\r\n    useFirestoreConnect([\r\n        { collection: \"ShareSessions\", doc: props.match.params.sessionID },\r\n    ]);\r\n    const session = useSelector(\r\n        ({ firestore: { data } }) =>\r\n            data.ShareSessions &&\r\n            data.ShareSessions[props.match.params.sessionID]\r\n    );\r\n    const profile = useSelector((state) => state.firebase.profile);\r\n    const uid = useSelector((state) => state.firebase.auth.uid);\r\n    const isSessionLoaded = isLoaded(session);\r\n\r\n    let { sessionID } = useParams();\r\n\r\n    // Determine the value of userInSession variable.\r\n    useEffect(() => {\r\n        if (isSessionLoaded && profile.isLoaded && !userInSessionDetermined) {\r\n            if (session && !profile.isEmpty) {\r\n                if (\r\n                    session.group.some(\r\n                        (user) =>\r\n                            user.userEmail === profile.email &&\r\n                            user.username === profile.username\r\n                    )\r\n                ) {\r\n                    setUserInSession(true);\r\n                    setUserInSessionDetermined(true);\r\n                } else {\r\n                    setUserInSession(false);\r\n                    setUserInSessionDetermined(true);\r\n                }\r\n            } else {\r\n                setUserInSession(false);\r\n                setUserInSessionDetermined(true);\r\n            }\r\n        }\r\n    }, [\r\n        isSessionLoaded,\r\n        profile,\r\n        session,\r\n        userInSession,\r\n        setUserInSession,\r\n        userInSessionDetermined,\r\n        setUserInSessionDetermined,\r\n    ]);\r\n\r\n    // Session owner fetches data and updates firestore. Everyone else waits for results to update,\r\n    useEffect(() => {\r\n        if (isSessionLoaded && profile.isLoaded) {\r\n            if (\r\n                session &&\r\n                session.active &&\r\n                !profile.isEmpty &&\r\n                session.owner === uid &&\r\n                !session.allocations\r\n            ) {\r\n                // Get results.\r\n                // First convert valuations in user array into a format compatible with API (see value matrix in /ApiFunctions).\r\n                // Need to first convert to array to store order.\r\n                // fsValuesArray[user][0] = uid, fsValuesArray[user][1] = details.\r\n                const fsValuesArray = Object.entries(session.values);\r\n                const userCount = session.group.length;\r\n                const goodsCount = session.goods.length;\r\n                var valueMatrix = Array.from(\r\n                    Array(userCount),\r\n                    () => new Array(goodsCount)\r\n                );\r\n                for (var i = 0; i < userCount; i++) {\r\n                    for (var j = 0; j < goodsCount; j++) {\r\n                        valueMatrix[i][j] = fsValuesArray[i][1].goods[j].Value;\r\n                    }\r\n                }\r\n\r\n                // Rent, goods or divorce route.\r\n                const allocations = {};\r\n                if (session.type === \"Rent\" && goodsCount === userCount) {\r\n                    // Extra check to make sure rent's matrix is square.\r\n                    getRentResults(valueMatrix, session.totalCost)\r\n                        .then((allocation) => {\r\n                            allocation.map(\r\n                                (user) =>\r\n                                    (allocations[fsValuesArray[user.who][0]] = {\r\n                                        email: fsValuesArray[user.who][1].email,\r\n                                        username:\r\n                                            fsValuesArray[user.who][1].username,\r\n                                        room:\r\n                                            fsValuesArray[user.who][1].goods[\r\n                                                user.room\r\n                                            ].Good,\r\n                                        price: user.price,\r\n                                    })\r\n                            );\r\n                            firestore\r\n                                .update(\r\n                                    {\r\n                                        collection: \"ShareSessions\",\r\n                                        doc: sessionID,\r\n                                    },\r\n                                    { allocations: allocations, active: false }\r\n                                )\r\n                                .then(() => {\r\n                                    console.log(\"Results Saved\");\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.log(err);\r\n                                });\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err);\r\n                        });\r\n                } else if (session.type === \"Goods\") {\r\n                    getGoodsResults(valueMatrix)\r\n                        .then((allocation) => {\r\n                            console.log(allocation);\r\n                            // Create goodsList using good names instead of indexes.\r\n                            allocation.map(\r\n                                (user) =>\r\n                                    (allocations[fsValuesArray[user.who][0]] = {\r\n                                        email: fsValuesArray[user.who][1].email,\r\n                                        username:\r\n                                            fsValuesArray[user.who][1].username,\r\n                                        goods: [...user.goodsList].map(\r\n                                            (index) =>\r\n                                                fsValuesArray[user.who][1]\r\n                                                    .goods[index].Good\r\n                                        ),\r\n                                    })\r\n                            );\r\n                            firestore\r\n                                .update(\r\n                                    {\r\n                                        collection: \"ShareSessions\",\r\n                                        doc: sessionID,\r\n                                    },\r\n                                    { allocations: allocations, active: false }\r\n                                )\r\n                                .then(() => {\r\n                                    console.log(\"Results Saved\");\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.log(err);\r\n                                });\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err);\r\n                        });\r\n                } else if (session.type === \"Divorce\") {\r\n                    getDivorceResults(valueMatrix, session.moneyAmount)\r\n                        .then((allocation) => {\r\n                            allocation.map(\r\n                                (user) =>\r\n                                    (allocations[fsValuesArray[user.who][0]] = {\r\n                                        email: fsValuesArray[user.who][1].email,\r\n                                        username:\r\n                                            fsValuesArray[user.who][1].username,\r\n                                        goods: [...user.goodsList].map(\r\n                                            (index) =>\r\n                                                fsValuesArray[user.who][1]\r\n                                                    .goods[index].Good\r\n                                        ),\r\n                                        money: user.money,\r\n                                    })\r\n                            );\r\n\r\n                            firestore\r\n                                .update(\r\n                                    {\r\n                                        collection: \"ShareSessions\",\r\n                                        doc: sessionID,\r\n                                    },\r\n                                    { allocations: allocations, active: false }\r\n                                )\r\n                                .then(() => {\r\n                                    console.log(\"Results Saved\");\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.log(err);\r\n                                });\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err);\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }, [firestore, isSessionLoaded, profile, session, sessionID, uid]);\r\n\r\n    // Load.\r\n    if (isSessionLoaded && profile.isLoaded && userInSessionDetermined) {\r\n        // User must be logged in.\r\n        if (!profile.isEmpty) {\r\n            // Session must exist and user must be in session group.\r\n            if (session && userInSession) {\r\n                return (\r\n                    <Container\r\n                        fluid\r\n                        className='divBlockWithContentTertiary min-vh-100'\r\n                    >\r\n                        <Row className='justify-content-center align-items-center min-vh-100'>\r\n                            <Col\r\n                                xs={10}\r\n                                sm={8}\r\n                                md={7}\r\n                                lg={6}\r\n                                className='centerCardCompact m-3'\r\n                                style={{ maxWidth: \"700px\" }}\r\n                            >\r\n                                {!session.allocations ? (\r\n                                    <h1>Loading Results</h1>\r\n                                ) : (\r\n                                    <div>\r\n                                        <h6>\r\n                                            {session.allocations[uid].username},\r\n                                            your envy-free allocation is:\r\n                                        </h6>\r\n                                        <Col sm='12 mt-5'>\r\n                                            <h5>\r\n                                                {session.type === \"Rent\"\r\n                                                    ? session.allocations[uid]\r\n                                                          .room +\r\n                                                      \" at $\" +\r\n                                                      session.allocations[uid]\r\n                                                          .price\r\n                                                    : session.allocations[uid]\r\n                                                          .goods}\r\n                                            </h5>\r\n                                            {session.type === \"Divorce\" ? (\r\n                                                <h5>\r\n                                                    + $\r\n                                                    {\r\n                                                        session.allocations[uid]\r\n                                                            .money\r\n                                                    }\r\n                                                </h5>\r\n                                            ) : null}\r\n                                        </Col>\r\n                                        <a\r\n                                            href='/'\r\n                                            style={{ textDecoration: \"none\" }}\r\n                                        >\r\n                                            <Button\r\n                                                variant='primary'\r\n                                                size='sm'\r\n                                                className='mt-5'\r\n                                            >\r\n                                                <span className='smButtonText'>\r\n                                                    Share Again\r\n                                                </span>\r\n                                            </Button>\r\n                                        </a>\r\n                                    </div>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                );\r\n            } else {\r\n                return <Redirect to={``} />;\r\n            }\r\n        } else {\r\n            return <Redirect to='/Login' />;\r\n        }\r\n    } else {\r\n        return <LoadingScreen />;\r\n    }\r\n};\r\n\r\nexport default RemoteResultsPage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./App.scss\";\n\n// React Router\nimport { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\n\n// Import all react components.\nimport MainPage from \"./Components/MainPage/MainPage\";\nimport About from \"./Components/MainPage/About\";\nimport LearnMainPage from \"./Components/LearningPage/LearnMainPage\";\nimport NavCom from \"./Components/Navigation/NavCom\";\nimport Footer from \"./Components/Navigation/Footer\";\nimport CreateAccount from \"./Components/Account/CreateAccount\";\nimport Login from \"./Components/Account/Login\";\nimport AccountBoard from \"./Components/Account/AccountBoard\";\nimport ScrollToTop from \"./Components/Helpers/ScrollToTop\";\nimport SessionNotificationOverlay from \"./Components/Notifications/SessionNotificationOverlay\";\n\nimport LocalOrRemoteQuestion from \"./Components/Distribute/QuestionnaireSubcomponents/LocalOrRemoteQuestion\";\n\n// Local process components.\nimport Goods_GatherInfoPage from \"./Components/Distribute/Local/Goods/Goods_GatherInfoPage\";\nimport Rent_GatherInfoPage from \"./Components/Distribute/Local/Rent/Rent_GatherInfoPage\";\nimport Divorce_GatherGoodsInfoPage from \"./Components/Distribute/Local/Divorce/Divorce_GatherGoodsInfoPage\";\nimport Divorce_GatherMoneyInfoPage from \"./Components/Distribute/Local/Divorce/Divorce_GatherMoneyInfoPage\";\nimport LocalInputGroupInfoPage from \"./Components/Distribute/Local/Group/LocalInputGroupInfoPage\";\nimport GoodsQuestionnairePageShell from \"./Components/Distribute/Local/Goods/GoodsQuestionnairePage\";\nimport RentQuestionnairePageShell from \"./Components/Distribute/Local/Rent/RentQuestionnairePage\";\nimport SetValuationsPage from \"./Components/Distribute/Local/SetValuations/SetValuationsPage\";\nimport LocalResultsPage from \"./Components/Distribute/Local/Results/LocalResultsPage\";\n\n// Remote process components.\nimport RemoteGatherGoodsPage from \"./Components/Distribute/Remote/GatherInfo/Goods/RemoteGatherGoodsPage\";\nimport RemoteDivorce_GatherMoneyInfoPage from \"./Components/Distribute/Remote/GatherInfo/Goods/RemoteDivorce_GatherMoneyInfoPage\";\nimport RemoteInputGroupInfoPage from \"./Components/Distribute/Remote/GatherInfo/Group/RemoteInputGroupInfoPage\";\nimport Remote_SetValuationsPage from \"./Components/Distribute/Remote/SetValuations/Remote_SetValuationsPage\";\nimport RemoteResultsPage from \"./Components/Distribute/Remote/Results/RemoteResultsPage\";\n\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n    // Get auth objects from firestore.\n    const auth = useSelector((state) => state.firebase.auth);\n\n    // Contains info about route.\n    const location = useLocation();\n\n    //? Change questions and group info route to a single route if no difference in questions or group data collection.\n    return (\n        <div className='App'>\n            <NavCom />\n            <ScrollToTop />\n            {auth.isLoaded && !auth.isEmpty ? (\n                <SessionNotificationOverlay auth={auth} />\n            ) : null}\n            <Switch location={location} key={location.pathname}>\n                <Route exact path='/' component={MainPage} />\n                <Route exact path='/About' component={About} />\n                <Route exact path='/Learn' component={LearnMainPage} />\n\n                {/*//* Remote */}\n                <Route\n                    exact\n                    path='/Distribute/localremote/:goodType'\n                    component={LocalOrRemoteQuestion}\n                />\n                <Route\n                    exact\n                    path='/Distribute/GoodInfo/Remote/:sessionID'\n                    component={RemoteGatherGoodsPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/GoodInfo/Remote/:sessionID/2'\n                    component={RemoteDivorce_GatherMoneyInfoPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/GroupInfo/Remote/:sessionID'\n                    component={RemoteInputGroupInfoPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/Valuations/Remote/:sessionID'\n                    component={Remote_SetValuationsPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/Results/Remote/:sessionID'\n                    component={RemoteResultsPage}\n                />\n\n                {/*//* Local */}\n                <Route\n                    exact\n                    path='/Distribute/Questions/Local/Goods/:stage'\n                    component={GoodsQuestionnairePageShell}\n                />\n                <Route\n                    exact\n                    path='/Distribute/Questions/Local/Rent/:stage'\n                    component={RentQuestionnairePageShell}\n                />\n                <Route\n                    exact\n                    path='/Distribute/GoodInfo/Local/Goods'\n                    component={Goods_GatherInfoPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/GoodInfo/Local/Rent'\n                    component={Rent_GatherInfoPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/GoodInfo/Local/Divorce'\n                    component={Divorce_GatherGoodsInfoPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/GoodInfo/Local/Divorce2'\n                    component={Divorce_GatherMoneyInfoPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/GroupInfo/Local/:goodType'\n                    component={LocalInputGroupInfoPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/Valuations/Local/:goodType'\n                    component={SetValuationsPage}\n                />\n                <Route\n                    exact\n                    path='/Distribute/Results/Local/:goodType'\n                    component={LocalResultsPage}\n                />\n\n                <Route exact path='/CreateAccount' component={CreateAccount} />\n                <Route exact path='/Login' component={Login} />\n                <Route exact path='/Account' component={AccountBoard} />\n                <Route render={() => <Redirect to='/' />} />\n            </Switch>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    goodsArray: [],\r\n    totalValue: 0,\r\n    moneyAmount: 0,\r\n    goodType: \"\",\r\n};\r\n\r\nconst distGoodsInfoReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_ROOMS\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            // Create array of rooms based on how many goods there are.\r\n            var tempRoomsArr = [];\r\n            for (var i = 0; i < action.roomCount; i++) {\r\n                var room = { Good: \"Room \" + (parseInt(i) + 1), Value: 0 };\r\n                tempRoomsArr.push(room);\r\n            }\r\n            var r = \"Rent\";\r\n\r\n            return {\r\n                ...state,\r\n                goodsArray: tempRoomsArr,\r\n                goodType: r,\r\n            };\r\n        case \"ADD_GOODS\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            // Add good name to goods array by first turning it into a good object.\r\n            var tempGoodsArr = [...state.goodsArray];\r\n            /*\r\n            var good = {\r\n                Good: String(action.good.Good),\r\n                estValue: action.good.Value,\r\n                Value: 0,\r\n            };*/\r\n            tempGoodsArr.push(action.good);\r\n\r\n            var goodsTotalVal;\r\n            if (tempGoodsArr.some((good) => good.estValue > 0)) {\r\n                goodsTotalVal = tempGoodsArr.reduce(\r\n                    (t, good) => t + parseInt(good.estValue),\r\n                    0\r\n                );\r\n                goodsTotalVal = goodsTotalVal < 1000 ? 1000 : goodsTotalVal;\r\n            } else {\r\n                goodsTotalVal = 1000;\r\n            }\r\n            var g = \"Goods\";\r\n\r\n            console.log(goodsTotalVal);\r\n\r\n            return {\r\n                ...state,\r\n                totalValue: goodsTotalVal,\r\n                goodsArray: tempGoodsArr,\r\n                goodType: g,\r\n            };\r\n        case \"DELETE_GOOD\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            const newGoodsArr = [...state.goodsArray].filter((good) => {\r\n                return good.Good !== action.goodName;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                goodsArray: newGoodsArr,\r\n            };\r\n        // Adding the total value of the house in case of sharing rent method.\r\n        case \"UPDATE_TOTAL_VALUE\":\r\n            console.log(\"Success \", action.type);\r\n            var newTotal = action.i;\r\n\r\n            return {\r\n                ...state,\r\n                totalValue: newTotal,\r\n            };\r\n        // For adding money to share in case of divorce method.\r\n        case \"UPDATE_MONEY_TO_SHARE\":\r\n            console.log(\"Success \", action.type);\r\n            var newMoneyAmount = action.moneyAmount;\r\n\r\n            return {\r\n                ...state,\r\n                moneyAmount: newMoneyAmount,\r\n            };\r\n        case \"UPDATE_VALUATIONS\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            // Create array of objects based on how many goods there are.\r\n            var tempUpdatedArr = action.updatedArr;\r\n\r\n            return {\r\n                ...state,\r\n                goodsArray: tempUpdatedArr,\r\n            };\r\n        case \"RESET\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            return {\r\n                ...state,\r\n                goodsArray: [],\r\n                totalValue: 0,\r\n                moneyAmount: 0,\r\n                goodType: \"\",\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default distGoodsInfoReducer;\r\n","const initState = {\r\n    //* Array of users with their own goods and valuations array.\r\n    // [{userEmail?, username, userGoodsArr}...]\r\n    userArray: [],\r\n\r\n    //* Array holding the allocations.\r\n    //? Hold userId in 'user' key?\r\n    // [{userEmail?, username, alloGoods?, room?, price?, }...]\r\n    allocations: [],\r\n};\r\n\r\nconst GroupValuesReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_USER\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            const tempUserArr = [...state.userArray];\r\n            tempUserArr.push({\r\n                userEmail: action.email ? String(action.email) : null,\r\n                username: String(action.username),\r\n                userGoodsArr: JSON.parse(JSON.stringify(action.goods)), // Deep clone goods array.\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userArray: tempUserArr,\r\n            };\r\n        case \"ADD_INIT_USER\":\r\n            const tempInitUserArr = [...state.userArray];\r\n            if (tempInitUserArr.length < 1) {\r\n                console.log(\"Success\", action.type);\r\n                tempInitUserArr.push({\r\n                    userEmail: String(action.email),\r\n                    username: String(action.username),\r\n                    userGoodsArr: JSON.parse(JSON.stringify(action.goods)), // Deep clone goods array.\r\n                });\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                userArray: tempInitUserArr,\r\n            };\r\n        case \"DELETE_USER\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            const newUserArr = [...state.userArray].filter((user) => {\r\n                if (user.userEmail) {\r\n                    return user.userEmail !== action.userEmail;\r\n                } else {\r\n                    return user.username !== action.username;\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userArray: newUserArr,\r\n            };\r\n        case \"SET_ALLOCATIONS\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            const newAllocationsArr = [...action.allocationArr];\r\n\r\n            return {\r\n                ...state,\r\n                allocations: newAllocationsArr,\r\n            };\r\n        case \"RESET\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            return {\r\n                ...state,\r\n                allocations: [],\r\n                userArray: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default GroupValuesReducer;\r\n","const initState = {\r\n    shareMethod: null,\r\n    userValues: [\r\n        {\r\n            question: \"Question 1\",\r\n            answer: \"\",\r\n        },\r\n        {\r\n            question: \"Question 2\",\r\n            answer: \"\",\r\n        },\r\n        {\r\n            question: \"Question 3\",\r\n            answer: \"\",\r\n        },\r\n    ],\r\n};\r\n\r\nconst distQuestionsReducer = (state = initState, action) => {\r\n    var tempArr = [];\r\n    switch (action.type) {\r\n        case \"SET_SHARE_METHOD\":\r\n            console.log(\"Success\", action.type);\r\n\r\n            const newShareMethod = action.method;\r\n\r\n            return {\r\n                ...state,\r\n                shareMethod: newShareMethod,\r\n            };\r\n        case \"Question 1\":\r\n            console.log(\"Success\", action.ans);\r\n\r\n            // Create copy array but with answer of the quesion.\r\n            tempArr = [];\r\n            state.userValues.forEach((e) => {\r\n                if (e.question === \"Question 1\") {\r\n                    tempArr.push({\r\n                        question: \"Question 1\",\r\n                        answer: action.ans,\r\n                    });\r\n                } else {\r\n                    tempArr.push(e);\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userValues: tempArr,\r\n            };\r\n        case \"Question 2\":\r\n            console.log(\"Success\", action.ans);\r\n\r\n            // Create copy array but with answer of the quesion.\r\n            tempArr = [];\r\n            state.userValues.forEach((e) => {\r\n                if (e.question === \"Question 2\") {\r\n                    tempArr.push({\r\n                        question: \"Question 2\",\r\n                        answer: action.ans,\r\n                    });\r\n                } else {\r\n                    tempArr.push(e);\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userValues: tempArr,\r\n            };\r\n        case \"Question 3\":\r\n            console.log(\"Success\", action.ans);\r\n\r\n            // Create copy array but with answer of the quesion.\r\n            tempArr = [];\r\n            state.userValues.forEach((e) => {\r\n                if (e.question === \"Question 3\") {\r\n                    tempArr.push({\r\n                        question: \"Question 3\",\r\n                        answer: action.ans,\r\n                    });\r\n                } else {\r\n                    tempArr.push(e);\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userValues: tempArr,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default distQuestionsReducer;\r\n","// Redux.\r\nimport { combineReducers } from \"redux\";\r\n\r\n// Reducers.\r\nimport distGoodsInfoReducer from \"./distGoodsInfoReducer\";\r\nimport GroupValuesReducer from \"./GroupValuesReducer\";\r\nimport distQuestionsReducer from \"./distQuestionsReducer\";\r\n\r\n// Firebase Reducer.\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n    distGoodsInfo: distGoodsInfoReducer,\r\n    distGroupInfo: GroupValuesReducer,\r\n    questionnaireAnswers: distQuestionsReducer,\r\n    // Firebase\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Init firebase\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD06iZQiikFSbQ2cuQ3fKbtBVWvHQz0w7k\",\r\n    authDomain: \"fairshare-48f9f.firebaseapp.com\",\r\n    projectId: \"fairshare-48f9f\",\r\n    storageBucket: \"fairshare-48f9f.appspot.com\",\r\n    messagingSenderId: \"1097496332317\",\r\n    appId: \"1:1097496332317:web:7c6de0506d954ddf961ef4\",\r\n    measurementId: \"G-EQK1GXWT16\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// Redux\nimport { createStore, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./ReduxStore/Reducers/rootReducer\";\n\n// Firebase\nimport fbConfig from \"./FirebaseConfig/fbConfig\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { createFirestoreInstance, reduxFirestore } from \"redux-firestore\";\n\n// Start firebase firestore.\nfirebase.firestore();\n\n// Setting up firebase with redux.\nconst createStoreWithFirebase = compose(\n    reduxFirestore(firebase) // firebase instance as first argument, rfConfig as optional second\n)(createStore);\nconst reduxStore = createStoreWithFirebase(rootReducer);\n\n// React-Redux-Firebase.\nconst rrfConfig = {\n    userProfile: \"users\",\n    useFirestoreForProfile: true,\n};\nconst rrfProps = {\n    firebase,\n    config: fbConfig,\n    // eslint-disable-next-line\n    config: rrfConfig,\n    dispatch: reduxStore.dispatch,\n    createFirestoreInstance,\n};\n\nReactDOM.render(\n    <Provider store={reduxStore}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <Router>\n                <React.StrictMode>\n                    <App />\n                </React.StrictMode>\n            </Router>\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}