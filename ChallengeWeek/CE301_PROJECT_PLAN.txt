OVERAL OBJECTIVES:
	Website helping users achieve a 'fair' distribution of goods among themselves.
		Goods - rooms, goods, tasks.
	Using multiple rental harmony algorithms based on user's preferences.
		Algorithms - Continuous auction, envy-free but not non-negative, maximin, non-negative.
	Questionnaire to determine user's preferences.
	Educate users about the algorithms.
	User account system so users can store results, and save preferences.
	Clean, modern website design, with a clear user interface.
		CSS framework - BootStrap.

IMPLEMENTATION:
	3 PARTS:
		Front-end website design and user interface (HTML, CSS, JS).
		Algorithms to achieve rental harmony, written is JS(takes user input, outputs results).
		Back-end to store information (user's accounts, user's preferences).
		
	Order of part completion:
		Partial Front-end --> Algorithms --> Back-end --> Finish Front-end.
	
	Time-line - By week 11:
		Finished (partial) Front-end: 
			All (React) components made and added, all navigation and user interface completed, minimal CSS (final design chosen; basic implementation).
			React-Redux implemented (ready to be used).
			Questionnaire fully implemented, connected to Redux, ready to be implemented with Back-end.
			
			...Everything ready for next stage (algorithms) to be implemented.
	
RISKS:
	Algorithm could not be seen as fair, could anger a user.
	Open source libraries are used - could go out of date, become vulnerable, project needs to be kept up to date with the libraries.

CONTEXT:
	Groups want to split certain things amongst themselves in a way that is fair and wont leave some people upset.
	People in the group have preferences over what they want / don't want.
	Algorithms can divide things in a way that is fair for everyone based on their preferences.